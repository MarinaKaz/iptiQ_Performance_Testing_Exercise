/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 40.0, "minX": 0.0, "maxY": 130398.0, "series": [{"data": [[0.0, 40.0], [0.1, 44.0], [0.2, 47.0], [0.3, 51.0], [0.4, 56.0], [0.5, 63.0], [0.6, 66.0], [0.7, 71.0], [0.8, 78.0], [0.9, 91.0], [1.0, 103.0], [1.1, 115.0], [1.2, 122.0], [1.3, 128.0], [1.4, 153.0], [1.5, 189.0], [1.6, 213.0], [1.7, 238.0], [1.8, 280.0], [1.9, 328.0], [2.0, 363.0], [2.1, 421.0], [2.2, 428.0], [2.3, 436.0], [2.4, 443.0], [2.5, 451.0], [2.6, 458.0], [2.7, 474.0], [2.8, 481.0], [2.9, 484.0], [3.0, 487.0], [3.1, 491.0], [3.2, 497.0], [3.3, 503.0], [3.4, 507.0], [3.5, 509.0], [3.6, 511.0], [3.7, 513.0], [3.8, 515.0], [3.9, 516.0], [4.0, 517.0], [4.1, 519.0], [4.2, 521.0], [4.3, 529.0], [4.4, 532.0], [4.5, 535.0], [4.6, 536.0], [4.7, 538.0], [4.8, 540.0], [4.9, 541.0], [5.0, 542.0], [5.1, 544.0], [5.2, 548.0], [5.3, 550.0], [5.4, 557.0], [5.5, 559.0], [5.6, 560.0], [5.7, 561.0], [5.8, 562.0], [5.9, 564.0], [6.0, 566.0], [6.1, 569.0], [6.2, 572.0], [6.3, 574.0], [6.4, 577.0], [6.5, 578.0], [6.6, 580.0], [6.7, 582.0], [6.8, 583.0], [6.9, 584.0], [7.0, 585.0], [7.1, 587.0], [7.2, 587.0], [7.3, 588.0], [7.4, 589.0], [7.5, 591.0], [7.6, 592.0], [7.7, 593.0], [7.8, 594.0], [7.9, 595.0], [8.0, 596.0], [8.1, 597.0], [8.2, 598.0], [8.3, 599.0], [8.4, 600.0], [8.5, 601.0], [8.6, 602.0], [8.7, 604.0], [8.8, 604.0], [8.9, 608.0], [9.0, 610.0], [9.1, 610.0], [9.2, 612.0], [9.3, 613.0], [9.4, 618.0], [9.5, 620.0], [9.6, 624.0], [9.7, 626.0], [9.8, 631.0], [9.9, 638.0], [10.0, 641.0], [10.1, 645.0], [10.2, 651.0], [10.3, 653.0], [10.4, 657.0], [10.5, 659.0], [10.6, 661.0], [10.7, 662.0], [10.8, 663.0], [10.9, 664.0], [11.0, 668.0], [11.1, 669.0], [11.2, 670.0], [11.3, 671.0], [11.4, 672.0], [11.5, 672.0], [11.6, 673.0], [11.7, 674.0], [11.8, 676.0], [11.9, 678.0], [12.0, 680.0], [12.1, 682.0], [12.2, 685.0], [12.3, 686.0], [12.4, 689.0], [12.5, 692.0], [12.6, 693.0], [12.7, 698.0], [12.8, 700.0], [12.9, 701.0], [13.0, 701.0], [13.1, 704.0], [13.2, 706.0], [13.3, 707.0], [13.4, 709.0], [13.5, 711.0], [13.6, 716.0], [13.7, 718.0], [13.8, 722.0], [13.9, 725.0], [14.0, 726.0], [14.1, 727.0], [14.2, 731.0], [14.3, 734.0], [14.4, 736.0], [14.5, 739.0], [14.6, 741.0], [14.7, 752.0], [14.8, 757.0], [14.9, 767.0], [15.0, 776.0], [15.1, 779.0], [15.2, 783.0], [15.3, 785.0], [15.4, 788.0], [15.5, 791.0], [15.6, 792.0], [15.7, 794.0], [15.8, 796.0], [15.9, 797.0], [16.0, 799.0], [16.1, 801.0], [16.2, 803.0], [16.3, 805.0], [16.4, 807.0], [16.5, 808.0], [16.6, 810.0], [16.7, 811.0], [16.8, 812.0], [16.9, 814.0], [17.0, 815.0], [17.1, 819.0], [17.2, 821.0], [17.3, 824.0], [17.4, 825.0], [17.5, 826.0], [17.6, 828.0], [17.7, 829.0], [17.8, 831.0], [17.9, 832.0], [18.0, 832.0], [18.1, 833.0], [18.2, 834.0], [18.3, 835.0], [18.4, 835.0], [18.5, 837.0], [18.6, 838.0], [18.7, 839.0], [18.8, 840.0], [18.9, 842.0], [19.0, 843.0], [19.1, 844.0], [19.2, 844.0], [19.3, 846.0], [19.4, 847.0], [19.5, 848.0], [19.6, 852.0], [19.7, 853.0], [19.8, 853.0], [19.9, 854.0], [20.0, 854.0], [20.1, 855.0], [20.2, 855.0], [20.3, 856.0], [20.4, 857.0], [20.5, 858.0], [20.6, 859.0], [20.7, 860.0], [20.8, 860.0], [20.9, 863.0], [21.0, 866.0], [21.1, 866.0], [21.2, 867.0], [21.3, 868.0], [21.4, 870.0], [21.5, 871.0], [21.6, 873.0], [21.7, 874.0], [21.8, 876.0], [21.9, 877.0], [22.0, 879.0], [22.1, 880.0], [22.2, 881.0], [22.3, 883.0], [22.4, 885.0], [22.5, 887.0], [22.6, 888.0], [22.7, 888.0], [22.8, 889.0], [22.9, 891.0], [23.0, 893.0], [23.1, 895.0], [23.2, 899.0], [23.3, 901.0], [23.4, 902.0], [23.5, 905.0], [23.6, 906.0], [23.7, 909.0], [23.8, 910.0], [23.9, 911.0], [24.0, 915.0], [24.1, 921.0], [24.2, 924.0], [24.3, 929.0], [24.4, 932.0], [24.5, 937.0], [24.6, 939.0], [24.7, 943.0], [24.8, 947.0], [24.9, 949.0], [25.0, 953.0], [25.1, 954.0], [25.2, 955.0], [25.3, 965.0], [25.4, 970.0], [25.5, 972.0], [25.6, 975.0], [25.7, 977.0], [25.8, 978.0], [25.9, 979.0], [26.0, 980.0], [26.1, 981.0], [26.2, 983.0], [26.3, 984.0], [26.4, 988.0], [26.5, 992.0], [26.6, 994.0], [26.7, 996.0], [26.8, 998.0], [26.9, 1002.0], [27.0, 1002.0], [27.1, 1005.0], [27.2, 1006.0], [27.3, 1009.0], [27.4, 1011.0], [27.5, 1015.0], [27.6, 1017.0], [27.7, 1021.0], [27.8, 1023.0], [27.9, 1025.0], [28.0, 1028.0], [28.1, 1031.0], [28.2, 1032.0], [28.3, 1033.0], [28.4, 1034.0], [28.5, 1036.0], [28.6, 1037.0], [28.7, 1037.0], [28.8, 1040.0], [28.9, 1041.0], [29.0, 1042.0], [29.1, 1044.0], [29.2, 1045.0], [29.3, 1045.0], [29.4, 1046.0], [29.5, 1047.0], [29.6, 1047.0], [29.7, 1048.0], [29.8, 1049.0], [29.9, 1050.0], [30.0, 1051.0], [30.1, 1051.0], [30.2, 1052.0], [30.3, 1053.0], [30.4, 1055.0], [30.5, 1057.0], [30.6, 1058.0], [30.7, 1058.0], [30.8, 1059.0], [30.9, 1060.0], [31.0, 1061.0], [31.1, 1063.0], [31.2, 1065.0], [31.3, 1066.0], [31.4, 1068.0], [31.5, 1070.0], [31.6, 1070.0], [31.7, 1072.0], [31.8, 1073.0], [31.9, 1074.0], [32.0, 1075.0], [32.1, 1077.0], [32.2, 1080.0], [32.3, 1083.0], [32.4, 1085.0], [32.5, 1087.0], [32.6, 1089.0], [32.7, 1090.0], [32.8, 1090.0], [32.9, 1093.0], [33.0, 1096.0], [33.1, 1097.0], [33.2, 1100.0], [33.3, 1101.0], [33.4, 1102.0], [33.5, 1107.0], [33.6, 1107.0], [33.7, 1109.0], [33.8, 1110.0], [33.9, 1111.0], [34.0, 1112.0], [34.1, 1121.0], [34.2, 1124.0], [34.3, 1126.0], [34.4, 1126.0], [34.5, 1129.0], [34.6, 1132.0], [34.7, 1133.0], [34.8, 1136.0], [34.9, 1136.0], [35.0, 1138.0], [35.1, 1140.0], [35.2, 1141.0], [35.3, 1143.0], [35.4, 1145.0], [35.5, 1147.0], [35.6, 1148.0], [35.7, 1150.0], [35.8, 1152.0], [35.9, 1153.0], [36.0, 1155.0], [36.1, 1156.0], [36.2, 1157.0], [36.3, 1158.0], [36.4, 1160.0], [36.5, 1163.0], [36.6, 1166.0], [36.7, 1168.0], [36.8, 1171.0], [36.9, 1173.0], [37.0, 1175.0], [37.1, 1175.0], [37.2, 1177.0], [37.3, 1180.0], [37.4, 1182.0], [37.5, 1184.0], [37.6, 1187.0], [37.7, 1189.0], [37.8, 1189.0], [37.9, 1192.0], [38.0, 1193.0], [38.1, 1194.0], [38.2, 1197.0], [38.3, 1197.0], [38.4, 1199.0], [38.5, 1202.0], [38.6, 1203.0], [38.7, 1206.0], [38.8, 1207.0], [38.9, 1209.0], [39.0, 1210.0], [39.1, 1212.0], [39.2, 1213.0], [39.3, 1216.0], [39.4, 1217.0], [39.5, 1218.0], [39.6, 1219.0], [39.7, 1220.0], [39.8, 1221.0], [39.9, 1222.0], [40.0, 1223.0], [40.1, 1223.0], [40.2, 1224.0], [40.3, 1225.0], [40.4, 1226.0], [40.5, 1226.0], [40.6, 1228.0], [40.7, 1229.0], [40.8, 1229.0], [40.9, 1229.0], [41.0, 1230.0], [41.1, 1231.0], [41.2, 1232.0], [41.3, 1233.0], [41.4, 1235.0], [41.5, 1236.0], [41.6, 1237.0], [41.7, 1238.0], [41.8, 1239.0], [41.9, 1239.0], [42.0, 1239.0], [42.1, 1240.0], [42.2, 1240.0], [42.3, 1241.0], [42.4, 1241.0], [42.5, 1242.0], [42.6, 1243.0], [42.7, 1243.0], [42.8, 1243.0], [42.9, 1244.0], [43.0, 1245.0], [43.1, 1245.0], [43.2, 1246.0], [43.3, 1247.0], [43.4, 1247.0], [43.5, 1248.0], [43.6, 1248.0], [43.7, 1249.0], [43.8, 1250.0], [43.9, 1250.0], [44.0, 1250.0], [44.1, 1251.0], [44.2, 1251.0], [44.3, 1251.0], [44.4, 1252.0], [44.5, 1253.0], [44.6, 1253.0], [44.7, 1254.0], [44.8, 1255.0], [44.9, 1256.0], [45.0, 1257.0], [45.1, 1259.0], [45.2, 1260.0], [45.3, 1261.0], [45.4, 1263.0], [45.5, 1264.0], [45.6, 1265.0], [45.7, 1267.0], [45.8, 1268.0], [45.9, 1269.0], [46.0, 1269.0], [46.1, 1269.0], [46.2, 1271.0], [46.3, 1272.0], [46.4, 1272.0], [46.5, 1274.0], [46.6, 1275.0], [46.7, 1277.0], [46.8, 1279.0], [46.9, 1281.0], [47.0, 1283.0], [47.1, 1284.0], [47.2, 1284.0], [47.3, 1285.0], [47.4, 1285.0], [47.5, 1286.0], [47.6, 1287.0], [47.7, 1288.0], [47.8, 1288.0], [47.9, 1289.0], [48.0, 1290.0], [48.1, 1290.0], [48.2, 1291.0], [48.3, 1292.0], [48.4, 1293.0], [48.5, 1293.0], [48.6, 1294.0], [48.7, 1294.0], [48.8, 1295.0], [48.9, 1295.0], [49.0, 1296.0], [49.1, 1296.0], [49.2, 1296.0], [49.3, 1297.0], [49.4, 1298.0], [49.5, 1299.0], [49.6, 1299.0], [49.7, 1301.0], [49.8, 1301.0], [49.9, 1302.0], [50.0, 1302.0], [50.1, 1304.0], [50.2, 1305.0], [50.3, 1305.0], [50.4, 1306.0], [50.5, 1307.0], [50.6, 1308.0], [50.7, 1309.0], [50.8, 1309.0], [50.9, 1310.0], [51.0, 1311.0], [51.1, 1311.0], [51.2, 1312.0], [51.3, 1313.0], [51.4, 1313.0], [51.5, 1314.0], [51.6, 1314.0], [51.7, 1315.0], [51.8, 1316.0], [51.9, 1316.0], [52.0, 1316.0], [52.1, 1318.0], [52.2, 1318.0], [52.3, 1318.0], [52.4, 1319.0], [52.5, 1319.0], [52.6, 1319.0], [52.7, 1320.0], [52.8, 1320.0], [52.9, 1321.0], [53.0, 1322.0], [53.1, 1322.0], [53.2, 1323.0], [53.3, 1323.0], [53.4, 1323.0], [53.5, 1324.0], [53.6, 1324.0], [53.7, 1324.0], [53.8, 1326.0], [53.9, 1327.0], [54.0, 1328.0], [54.1, 1328.0], [54.2, 1329.0], [54.3, 1329.0], [54.4, 1330.0], [54.5, 1330.0], [54.6, 1331.0], [54.7, 1332.0], [54.8, 1333.0], [54.9, 1334.0], [55.0, 1334.0], [55.1, 1335.0], [55.2, 1336.0], [55.3, 1336.0], [55.4, 1337.0], [55.5, 1337.0], [55.6, 1338.0], [55.7, 1338.0], [55.8, 1339.0], [55.9, 1339.0], [56.0, 1340.0], [56.1, 1341.0], [56.2, 1341.0], [56.3, 1342.0], [56.4, 1342.0], [56.5, 1342.0], [56.6, 1343.0], [56.7, 1343.0], [56.8, 1344.0], [56.9, 1345.0], [57.0, 1345.0], [57.1, 1346.0], [57.2, 1346.0], [57.3, 1347.0], [57.4, 1348.0], [57.5, 1348.0], [57.6, 1349.0], [57.7, 1350.0], [57.8, 1351.0], [57.9, 1352.0], [58.0, 1352.0], [58.1, 1353.0], [58.2, 1354.0], [58.3, 1355.0], [58.4, 1356.0], [58.5, 1356.0], [58.6, 1357.0], [58.7, 1358.0], [58.8, 1359.0], [58.9, 1361.0], [59.0, 1361.0], [59.1, 1362.0], [59.2, 1362.0], [59.3, 1363.0], [59.4, 1363.0], [59.5, 1366.0], [59.6, 1367.0], [59.7, 1368.0], [59.8, 1370.0], [59.9, 1371.0], [60.0, 1371.0], [60.1, 1372.0], [60.2, 1372.0], [60.3, 1373.0], [60.4, 1373.0], [60.5, 1374.0], [60.6, 1375.0], [60.7, 1376.0], [60.8, 1378.0], [60.9, 1379.0], [61.0, 1379.0], [61.1, 1380.0], [61.2, 1383.0], [61.3, 1385.0], [61.4, 1386.0], [61.5, 1387.0], [61.6, 1388.0], [61.7, 1388.0], [61.8, 1389.0], [61.9, 1392.0], [62.0, 1392.0], [62.1, 1394.0], [62.2, 1394.0], [62.3, 1395.0], [62.4, 1396.0], [62.5, 1397.0], [62.6, 1397.0], [62.7, 1398.0], [62.8, 1399.0], [62.9, 1400.0], [63.0, 1401.0], [63.1, 1401.0], [63.2, 1401.0], [63.3, 1402.0], [63.4, 1404.0], [63.5, 1404.0], [63.6, 1405.0], [63.7, 1406.0], [63.8, 1409.0], [63.9, 1411.0], [64.0, 1412.0], [64.1, 1413.0], [64.2, 1415.0], [64.3, 1417.0], [64.4, 1420.0], [64.5, 1421.0], [64.6, 1425.0], [64.7, 1429.0], [64.8, 1431.0], [64.9, 1446.0], [65.0, 1461.0], [65.1, 1484.0], [65.2, 1509.0], [65.3, 1516.0], [65.4, 1521.0], [65.5, 1532.0], [65.6, 1543.0], [65.7, 1550.0], [65.8, 1565.0], [65.9, 1580.0], [66.0, 1583.0], [66.1, 1585.0], [66.2, 1594.0], [66.3, 1598.0], [66.4, 1606.0], [66.5, 1610.0], [66.6, 1613.0], [66.7, 1618.0], [66.8, 1622.0], [66.9, 1626.0], [67.0, 1629.0], [67.1, 1631.0], [67.2, 1634.0], [67.3, 1637.0], [67.4, 1639.0], [67.5, 1642.0], [67.6, 1645.0], [67.7, 1645.0], [67.8, 1646.0], [67.9, 1648.0], [68.0, 1650.0], [68.1, 1653.0], [68.2, 1656.0], [68.3, 1657.0], [68.4, 1658.0], [68.5, 1661.0], [68.6, 1663.0], [68.7, 1665.0], [68.8, 1668.0], [68.9, 1670.0], [69.0, 1673.0], [69.1, 1677.0], [69.2, 1680.0], [69.3, 1681.0], [69.4, 1682.0], [69.5, 1683.0], [69.6, 1684.0], [69.7, 1686.0], [69.8, 1688.0], [69.9, 1690.0], [70.0, 1690.0], [70.1, 1692.0], [70.2, 1693.0], [70.3, 1694.0], [70.4, 1698.0], [70.5, 1699.0], [70.6, 1700.0], [70.7, 1705.0], [70.8, 1707.0], [70.9, 1709.0], [71.0, 1712.0], [71.1, 1714.0], [71.2, 1720.0], [71.3, 1723.0], [71.4, 1724.0], [71.5, 1727.0], [71.6, 1727.0], [71.7, 1730.0], [71.8, 1732.0], [71.9, 1734.0], [72.0, 1738.0], [72.1, 1741.0], [72.2, 1744.0], [72.3, 1748.0], [72.4, 1752.0], [72.5, 1754.0], [72.6, 1759.0], [72.7, 1762.0], [72.8, 1763.0], [72.9, 1765.0], [73.0, 1773.0], [73.1, 1776.0], [73.2, 1781.0], [73.3, 1785.0], [73.4, 1788.0], [73.5, 1792.0], [73.6, 1794.0], [73.7, 1796.0], [73.8, 1801.0], [73.9, 1811.0], [74.0, 1817.0], [74.1, 1822.0], [74.2, 1828.0], [74.3, 1831.0], [74.4, 1838.0], [74.5, 1840.0], [74.6, 1850.0], [74.7, 1861.0], [74.8, 1865.0], [74.9, 1869.0], [75.0, 1875.0], [75.1, 1879.0], [75.2, 1881.0], [75.3, 1883.0], [75.4, 1885.0], [75.5, 1886.0], [75.6, 1890.0], [75.7, 1891.0], [75.8, 1893.0], [75.9, 1894.0], [76.0, 1896.0], [76.1, 1900.0], [76.2, 1908.0], [76.3, 1911.0], [76.4, 1918.0], [76.5, 1928.0], [76.6, 1951.0], [76.7, 1969.0], [76.8, 1971.0], [76.9, 1978.0], [77.0, 1981.0], [77.1, 1992.0], [77.2, 2011.0], [77.3, 2032.0], [77.4, 2042.0], [77.5, 2054.0], [77.6, 2072.0], [77.7, 2083.0], [77.8, 2090.0], [77.9, 2095.0], [78.0, 2102.0], [78.1, 2122.0], [78.2, 2134.0], [78.3, 2145.0], [78.4, 2155.0], [78.5, 2174.0], [78.6, 2201.0], [78.7, 2205.0], [78.8, 2211.0], [78.9, 2218.0], [79.0, 2227.0], [79.1, 2244.0], [79.2, 2256.0], [79.3, 2262.0], [79.4, 2270.0], [79.5, 2277.0], [79.6, 2287.0], [79.7, 2296.0], [79.8, 2307.0], [79.9, 2314.0], [80.0, 2315.0], [80.1, 2318.0], [80.2, 2326.0], [80.3, 2332.0], [80.4, 2336.0], [80.5, 2341.0], [80.6, 2347.0], [80.7, 2357.0], [80.8, 2363.0], [80.9, 2364.0], [81.0, 2368.0], [81.1, 2369.0], [81.2, 2373.0], [81.3, 2377.0], [81.4, 2395.0], [81.5, 2408.0], [81.6, 2446.0], [81.7, 2501.0], [81.8, 2573.0], [81.9, 2639.0], [82.0, 2650.0], [82.1, 2665.0], [82.2, 2692.0], [82.3, 2726.0], [82.4, 2780.0], [82.5, 2787.0], [82.6, 2834.0], [82.7, 2919.0], [82.8, 2951.0], [82.9, 3172.0], [83.0, 3185.0], [83.1, 3186.0], [83.2, 3189.0], [83.3, 3193.0], [83.4, 3197.0], [83.5, 3199.0], [83.6, 3203.0], [83.7, 3204.0], [83.8, 3206.0], [83.9, 3210.0], [84.0, 3309.0], [84.1, 3335.0], [84.2, 3377.0], [84.3, 3752.0], [84.4, 3807.0], [84.5, 3821.0], [84.6, 3823.0], [84.7, 3823.0], [84.8, 3826.0], [84.9, 3845.0], [85.0, 3860.0], [85.1, 3879.0], [85.2, 3892.0], [85.3, 3908.0], [85.4, 3918.0], [85.5, 3921.0], [85.6, 3921.0], [85.7, 3923.0], [85.8, 3928.0], [85.9, 3935.0], [86.0, 3958.0], [86.1, 3983.0], [86.2, 3996.0], [86.3, 4025.0], [86.4, 4037.0], [86.5, 4058.0], [86.6, 4077.0], [86.7, 4084.0], [86.8, 4099.0], [86.9, 4108.0], [87.0, 4114.0], [87.1, 4117.0], [87.2, 4118.0], [87.3, 4128.0], [87.4, 4137.0], [87.5, 4183.0], [87.6, 4198.0], [87.7, 4209.0], [87.8, 4219.0], [87.9, 4224.0], [88.0, 4229.0], [88.1, 4235.0], [88.2, 4241.0], [88.3, 4247.0], [88.4, 4257.0], [88.5, 4263.0], [88.6, 4269.0], [88.7, 4279.0], [88.8, 4283.0], [88.9, 4294.0], [89.0, 4316.0], [89.1, 4325.0], [89.2, 4335.0], [89.3, 4344.0], [89.4, 4351.0], [89.5, 4356.0], [89.6, 4364.0], [89.7, 4369.0], [89.8, 4373.0], [89.9, 4378.0], [90.0, 4380.0], [90.1, 4388.0], [90.2, 4390.0], [90.3, 4397.0], [90.4, 4408.0], [90.5, 4431.0], [90.6, 4462.0], [90.7, 4519.0], [90.8, 4546.0], [90.9, 4551.0], [91.0, 4562.0], [91.1, 4592.0], [91.2, 4612.0], [91.3, 4620.0], [91.4, 4639.0], [91.5, 4651.0], [91.6, 4661.0], [91.7, 4675.0], [91.8, 4690.0], [91.9, 4728.0], [92.0, 4791.0], [92.1, 4865.0], [92.2, 4896.0], [92.3, 4917.0], [92.4, 4961.0], [92.5, 4990.0], [92.6, 5021.0], [92.7, 5037.0], [92.8, 5099.0], [92.9, 5182.0], [93.0, 5217.0], [93.1, 5316.0], [93.2, 5361.0], [93.3, 5434.0], [93.4, 5616.0], [93.5, 6077.0], [93.6, 6305.0], [93.7, 6314.0], [93.8, 6322.0], [93.9, 6327.0], [94.0, 6334.0], [94.1, 6338.0], [94.2, 6340.0], [94.3, 6341.0], [94.4, 6344.0], [94.5, 6346.0], [94.6, 6351.0], [94.7, 6360.0], [94.8, 6403.0], [94.9, 6763.0], [95.0, 6821.0], [95.1, 6966.0], [95.2, 7007.0], [95.3, 7075.0], [95.4, 7161.0], [95.5, 7307.0], [95.6, 7360.0], [95.7, 7373.0], [95.8, 7493.0], [95.9, 7569.0], [96.0, 7577.0], [96.1, 7767.0], [96.2, 8074.0], [96.3, 8212.0], [96.4, 8331.0], [96.5, 8403.0], [96.6, 8575.0], [96.7, 9178.0], [96.8, 9184.0], [96.9, 9191.0], [97.0, 9201.0], [97.1, 9210.0], [97.2, 9303.0], [97.3, 9339.0], [97.4, 9351.0], [97.5, 9810.0], [97.6, 9868.0], [97.7, 9876.0], [97.8, 10002.0], [97.9, 10222.0], [98.0, 11521.0], [98.1, 13289.0], [98.2, 120517.0], [98.3, 120558.0], [98.4, 120568.0], [98.5, 120585.0], [98.6, 120597.0], [98.7, 120610.0], [98.8, 121047.0], [98.9, 121105.0], [99.0, 121131.0], [99.1, 121166.0], [99.2, 121197.0], [99.3, 121387.0], [99.4, 121508.0], [99.5, 121535.0], [99.6, 121649.0], [99.7, 122090.0], [99.8, 124079.0], [99.9, 124324.0]], "isOverall": false, "label": "https//www.bol.com/nl/nl/", "isController": false}, {"data": [[0.0, 40.0], [0.1, 44.0], [0.2, 47.0], [0.3, 51.0], [0.4, 56.0], [0.5, 63.0], [0.6, 66.0], [0.7, 71.0], [0.8, 78.0], [0.9, 91.0], [1.0, 103.0], [1.1, 115.0], [1.2, 122.0], [1.3, 128.0], [1.4, 153.0], [1.5, 189.0], [1.6, 213.0], [1.7, 238.0], [1.8, 280.0], [1.9, 328.0], [2.0, 363.0], [2.1, 421.0], [2.2, 428.0], [2.3, 436.0], [2.4, 443.0], [2.5, 451.0], [2.6, 458.0], [2.7, 474.0], [2.8, 481.0], [2.9, 484.0], [3.0, 487.0], [3.1, 491.0], [3.2, 497.0], [3.3, 503.0], [3.4, 507.0], [3.5, 509.0], [3.6, 511.0], [3.7, 513.0], [3.8, 515.0], [3.9, 516.0], [4.0, 517.0], [4.1, 519.0], [4.2, 521.0], [4.3, 529.0], [4.4, 532.0], [4.5, 535.0], [4.6, 536.0], [4.7, 538.0], [4.8, 540.0], [4.9, 541.0], [5.0, 542.0], [5.1, 544.0], [5.2, 548.0], [5.3, 550.0], [5.4, 557.0], [5.5, 559.0], [5.6, 560.0], [5.7, 561.0], [5.8, 562.0], [5.9, 564.0], [6.0, 566.0], [6.1, 569.0], [6.2, 572.0], [6.3, 574.0], [6.4, 577.0], [6.5, 578.0], [6.6, 580.0], [6.7, 582.0], [6.8, 583.0], [6.9, 584.0], [7.0, 585.0], [7.1, 587.0], [7.2, 587.0], [7.3, 588.0], [7.4, 589.0], [7.5, 591.0], [7.6, 592.0], [7.7, 593.0], [7.8, 594.0], [7.9, 595.0], [8.0, 596.0], [8.1, 597.0], [8.2, 598.0], [8.3, 599.0], [8.4, 600.0], [8.5, 601.0], [8.6, 602.0], [8.7, 604.0], [8.8, 604.0], [8.9, 608.0], [9.0, 610.0], [9.1, 610.0], [9.2, 612.0], [9.3, 613.0], [9.4, 618.0], [9.5, 620.0], [9.6, 624.0], [9.7, 626.0], [9.8, 631.0], [9.9, 638.0], [10.0, 641.0], [10.1, 645.0], [10.2, 651.0], [10.3, 653.0], [10.4, 657.0], [10.5, 659.0], [10.6, 661.0], [10.7, 662.0], [10.8, 663.0], [10.9, 664.0], [11.0, 668.0], [11.1, 669.0], [11.2, 670.0], [11.3, 671.0], [11.4, 672.0], [11.5, 672.0], [11.6, 673.0], [11.7, 674.0], [11.8, 676.0], [11.9, 678.0], [12.0, 680.0], [12.1, 682.0], [12.2, 685.0], [12.3, 686.0], [12.4, 689.0], [12.5, 692.0], [12.6, 693.0], [12.7, 698.0], [12.8, 700.0], [12.9, 701.0], [13.0, 701.0], [13.1, 704.0], [13.2, 706.0], [13.3, 707.0], [13.4, 709.0], [13.5, 711.0], [13.6, 716.0], [13.7, 718.0], [13.8, 722.0], [13.9, 725.0], [14.0, 726.0], [14.1, 727.0], [14.2, 731.0], [14.3, 734.0], [14.4, 736.0], [14.5, 739.0], [14.6, 741.0], [14.7, 752.0], [14.8, 757.0], [14.9, 767.0], [15.0, 776.0], [15.1, 779.0], [15.2, 783.0], [15.3, 785.0], [15.4, 788.0], [15.5, 791.0], [15.6, 792.0], [15.7, 794.0], [15.8, 796.0], [15.9, 797.0], [16.0, 799.0], [16.1, 801.0], [16.2, 803.0], [16.3, 805.0], [16.4, 807.0], [16.5, 808.0], [16.6, 810.0], [16.7, 811.0], [16.8, 812.0], [16.9, 814.0], [17.0, 815.0], [17.1, 819.0], [17.2, 821.0], [17.3, 824.0], [17.4, 825.0], [17.5, 826.0], [17.6, 828.0], [17.7, 829.0], [17.8, 831.0], [17.9, 832.0], [18.0, 832.0], [18.1, 833.0], [18.2, 834.0], [18.3, 835.0], [18.4, 835.0], [18.5, 837.0], [18.6, 838.0], [18.7, 839.0], [18.8, 840.0], [18.9, 842.0], [19.0, 843.0], [19.1, 844.0], [19.2, 844.0], [19.3, 846.0], [19.4, 847.0], [19.5, 848.0], [19.6, 852.0], [19.7, 853.0], [19.8, 853.0], [19.9, 854.0], [20.0, 854.0], [20.1, 855.0], [20.2, 855.0], [20.3, 856.0], [20.4, 857.0], [20.5, 858.0], [20.6, 859.0], [20.7, 860.0], [20.8, 860.0], [20.9, 863.0], [21.0, 866.0], [21.1, 866.0], [21.2, 867.0], [21.3, 868.0], [21.4, 870.0], [21.5, 871.0], [21.6, 873.0], [21.7, 874.0], [21.8, 876.0], [21.9, 877.0], [22.0, 879.0], [22.1, 880.0], [22.2, 881.0], [22.3, 883.0], [22.4, 885.0], [22.5, 887.0], [22.6, 888.0], [22.7, 888.0], [22.8, 889.0], [22.9, 891.0], [23.0, 893.0], [23.1, 895.0], [23.2, 899.0], [23.3, 901.0], [23.4, 902.0], [23.5, 905.0], [23.6, 906.0], [23.7, 909.0], [23.8, 910.0], [23.9, 911.0], [24.0, 915.0], [24.1, 921.0], [24.2, 924.0], [24.3, 929.0], [24.4, 932.0], [24.5, 937.0], [24.6, 939.0], [24.7, 943.0], [24.8, 947.0], [24.9, 949.0], [25.0, 953.0], [25.1, 954.0], [25.2, 955.0], [25.3, 965.0], [25.4, 970.0], [25.5, 972.0], [25.6, 975.0], [25.7, 977.0], [25.8, 978.0], [25.9, 979.0], [26.0, 980.0], [26.1, 981.0], [26.2, 983.0], [26.3, 984.0], [26.4, 988.0], [26.5, 992.0], [26.6, 994.0], [26.7, 996.0], [26.8, 998.0], [26.9, 1002.0], [27.0, 1002.0], [27.1, 1005.0], [27.2, 1006.0], [27.3, 1009.0], [27.4, 1011.0], [27.5, 1015.0], [27.6, 1017.0], [27.7, 1021.0], [27.8, 1023.0], [27.9, 1025.0], [28.0, 1028.0], [28.1, 1031.0], [28.2, 1032.0], [28.3, 1033.0], [28.4, 1034.0], [28.5, 1036.0], [28.6, 1037.0], [28.7, 1037.0], [28.8, 1040.0], [28.9, 1041.0], [29.0, 1042.0], [29.1, 1044.0], [29.2, 1045.0], [29.3, 1045.0], [29.4, 1046.0], [29.5, 1047.0], [29.6, 1047.0], [29.7, 1048.0], [29.8, 1049.0], [29.9, 1050.0], [30.0, 1051.0], [30.1, 1051.0], [30.2, 1052.0], [30.3, 1053.0], [30.4, 1055.0], [30.5, 1057.0], [30.6, 1058.0], [30.7, 1058.0], [30.8, 1059.0], [30.9, 1060.0], [31.0, 1061.0], [31.1, 1063.0], [31.2, 1065.0], [31.3, 1066.0], [31.4, 1068.0], [31.5, 1070.0], [31.6, 1070.0], [31.7, 1072.0], [31.8, 1073.0], [31.9, 1074.0], [32.0, 1075.0], [32.1, 1077.0], [32.2, 1080.0], [32.3, 1083.0], [32.4, 1085.0], [32.5, 1087.0], [32.6, 1089.0], [32.7, 1090.0], [32.8, 1090.0], [32.9, 1093.0], [33.0, 1096.0], [33.1, 1097.0], [33.2, 1100.0], [33.3, 1101.0], [33.4, 1102.0], [33.5, 1107.0], [33.6, 1107.0], [33.7, 1109.0], [33.8, 1110.0], [33.9, 1111.0], [34.0, 1112.0], [34.1, 1121.0], [34.2, 1124.0], [34.3, 1126.0], [34.4, 1126.0], [34.5, 1129.0], [34.6, 1132.0], [34.7, 1133.0], [34.8, 1136.0], [34.9, 1136.0], [35.0, 1138.0], [35.1, 1140.0], [35.2, 1141.0], [35.3, 1143.0], [35.4, 1145.0], [35.5, 1147.0], [35.6, 1148.0], [35.7, 1150.0], [35.8, 1152.0], [35.9, 1153.0], [36.0, 1155.0], [36.1, 1156.0], [36.2, 1157.0], [36.3, 1158.0], [36.4, 1160.0], [36.5, 1163.0], [36.6, 1166.0], [36.7, 1168.0], [36.8, 1171.0], [36.9, 1173.0], [37.0, 1175.0], [37.1, 1175.0], [37.2, 1177.0], [37.3, 1180.0], [37.4, 1182.0], [37.5, 1184.0], [37.6, 1187.0], [37.7, 1189.0], [37.8, 1189.0], [37.9, 1192.0], [38.0, 1193.0], [38.1, 1194.0], [38.2, 1197.0], [38.3, 1197.0], [38.4, 1199.0], [38.5, 1202.0], [38.6, 1203.0], [38.7, 1206.0], [38.8, 1207.0], [38.9, 1209.0], [39.0, 1210.0], [39.1, 1212.0], [39.2, 1213.0], [39.3, 1216.0], [39.4, 1217.0], [39.5, 1218.0], [39.6, 1219.0], [39.7, 1220.0], [39.8, 1221.0], [39.9, 1222.0], [40.0, 1223.0], [40.1, 1223.0], [40.2, 1224.0], [40.3, 1225.0], [40.4, 1226.0], [40.5, 1226.0], [40.6, 1228.0], [40.7, 1229.0], [40.8, 1229.0], [40.9, 1229.0], [41.0, 1230.0], [41.1, 1231.0], [41.2, 1232.0], [41.3, 1233.0], [41.4, 1235.0], [41.5, 1236.0], [41.6, 1237.0], [41.7, 1238.0], [41.8, 1239.0], [41.9, 1239.0], [42.0, 1239.0], [42.1, 1240.0], [42.2, 1240.0], [42.3, 1241.0], [42.4, 1241.0], [42.5, 1242.0], [42.6, 1243.0], [42.7, 1243.0], [42.8, 1243.0], [42.9, 1244.0], [43.0, 1245.0], [43.1, 1245.0], [43.2, 1246.0], [43.3, 1247.0], [43.4, 1247.0], [43.5, 1248.0], [43.6, 1248.0], [43.7, 1249.0], [43.8, 1250.0], [43.9, 1250.0], [44.0, 1250.0], [44.1, 1251.0], [44.2, 1251.0], [44.3, 1251.0], [44.4, 1252.0], [44.5, 1253.0], [44.6, 1253.0], [44.7, 1254.0], [44.8, 1255.0], [44.9, 1256.0], [45.0, 1257.0], [45.1, 1259.0], [45.2, 1260.0], [45.3, 1261.0], [45.4, 1263.0], [45.5, 1264.0], [45.6, 1265.0], [45.7, 1267.0], [45.8, 1268.0], [45.9, 1269.0], [46.0, 1269.0], [46.1, 1269.0], [46.2, 1271.0], [46.3, 1272.0], [46.4, 1272.0], [46.5, 1274.0], [46.6, 1275.0], [46.7, 1277.0], [46.8, 1279.0], [46.9, 1281.0], [47.0, 1283.0], [47.1, 1284.0], [47.2, 1284.0], [47.3, 1285.0], [47.4, 1285.0], [47.5, 1286.0], [47.6, 1287.0], [47.7, 1288.0], [47.8, 1288.0], [47.9, 1289.0], [48.0, 1290.0], [48.1, 1290.0], [48.2, 1291.0], [48.3, 1292.0], [48.4, 1293.0], [48.5, 1293.0], [48.6, 1294.0], [48.7, 1294.0], [48.8, 1295.0], [48.9, 1295.0], [49.0, 1296.0], [49.1, 1296.0], [49.2, 1296.0], [49.3, 1297.0], [49.4, 1298.0], [49.5, 1299.0], [49.6, 1299.0], [49.7, 1301.0], [49.8, 1301.0], [49.9, 1302.0], [50.0, 1302.0], [50.1, 1304.0], [50.2, 1305.0], [50.3, 1305.0], [50.4, 1306.0], [50.5, 1307.0], [50.6, 1308.0], [50.7, 1309.0], [50.8, 1309.0], [50.9, 1310.0], [51.0, 1311.0], [51.1, 1311.0], [51.2, 1312.0], [51.3, 1313.0], [51.4, 1313.0], [51.5, 1314.0], [51.6, 1314.0], [51.7, 1315.0], [51.8, 1316.0], [51.9, 1316.0], [52.0, 1316.0], [52.1, 1318.0], [52.2, 1318.0], [52.3, 1318.0], [52.4, 1319.0], [52.5, 1319.0], [52.6, 1319.0], [52.7, 1320.0], [52.8, 1320.0], [52.9, 1321.0], [53.0, 1322.0], [53.1, 1322.0], [53.2, 1323.0], [53.3, 1323.0], [53.4, 1323.0], [53.5, 1324.0], [53.6, 1324.0], [53.7, 1324.0], [53.8, 1326.0], [53.9, 1327.0], [54.0, 1328.0], [54.1, 1328.0], [54.2, 1329.0], [54.3, 1329.0], [54.4, 1330.0], [54.5, 1330.0], [54.6, 1331.0], [54.7, 1332.0], [54.8, 1333.0], [54.9, 1334.0], [55.0, 1334.0], [55.1, 1335.0], [55.2, 1336.0], [55.3, 1336.0], [55.4, 1337.0], [55.5, 1337.0], [55.6, 1338.0], [55.7, 1338.0], [55.8, 1339.0], [55.9, 1339.0], [56.0, 1340.0], [56.1, 1341.0], [56.2, 1341.0], [56.3, 1342.0], [56.4, 1342.0], [56.5, 1342.0], [56.6, 1343.0], [56.7, 1343.0], [56.8, 1344.0], [56.9, 1345.0], [57.0, 1345.0], [57.1, 1346.0], [57.2, 1346.0], [57.3, 1347.0], [57.4, 1348.0], [57.5, 1348.0], [57.6, 1349.0], [57.7, 1350.0], [57.8, 1351.0], [57.9, 1352.0], [58.0, 1352.0], [58.1, 1353.0], [58.2, 1354.0], [58.3, 1355.0], [58.4, 1356.0], [58.5, 1356.0], [58.6, 1357.0], [58.7, 1358.0], [58.8, 1359.0], [58.9, 1361.0], [59.0, 1361.0], [59.1, 1362.0], [59.2, 1362.0], [59.3, 1363.0], [59.4, 1363.0], [59.5, 1366.0], [59.6, 1367.0], [59.7, 1368.0], [59.8, 1370.0], [59.9, 1371.0], [60.0, 1371.0], [60.1, 1372.0], [60.2, 1372.0], [60.3, 1373.0], [60.4, 1373.0], [60.5, 1374.0], [60.6, 1375.0], [60.7, 1376.0], [60.8, 1378.0], [60.9, 1379.0], [61.0, 1379.0], [61.1, 1380.0], [61.2, 1383.0], [61.3, 1385.0], [61.4, 1386.0], [61.5, 1387.0], [61.6, 1388.0], [61.7, 1388.0], [61.8, 1389.0], [61.9, 1392.0], [62.0, 1392.0], [62.1, 1394.0], [62.2, 1394.0], [62.3, 1395.0], [62.4, 1396.0], [62.5, 1397.0], [62.6, 1397.0], [62.7, 1398.0], [62.8, 1399.0], [62.9, 1400.0], [63.0, 1401.0], [63.1, 1401.0], [63.2, 1401.0], [63.3, 1402.0], [63.4, 1404.0], [63.5, 1404.0], [63.6, 1405.0], [63.7, 1406.0], [63.8, 1409.0], [63.9, 1411.0], [64.0, 1412.0], [64.1, 1413.0], [64.2, 1415.0], [64.3, 1417.0], [64.4, 1420.0], [64.5, 1421.0], [64.6, 1425.0], [64.7, 1429.0], [64.8, 1431.0], [64.9, 1446.0], [65.0, 1461.0], [65.1, 1484.0], [65.2, 1509.0], [65.3, 1516.0], [65.4, 1521.0], [65.5, 1532.0], [65.6, 1543.0], [65.7, 1550.0], [65.8, 1565.0], [65.9, 1580.0], [66.0, 1583.0], [66.1, 1585.0], [66.2, 1594.0], [66.3, 1598.0], [66.4, 1606.0], [66.5, 1610.0], [66.6, 1613.0], [66.7, 1618.0], [66.8, 1622.0], [66.9, 1626.0], [67.0, 1629.0], [67.1, 1631.0], [67.2, 1634.0], [67.3, 1637.0], [67.4, 1639.0], [67.5, 1642.0], [67.6, 1645.0], [67.7, 1645.0], [67.8, 1646.0], [67.9, 1648.0], [68.0, 1650.0], [68.1, 1653.0], [68.2, 1656.0], [68.3, 1657.0], [68.4, 1658.0], [68.5, 1661.0], [68.6, 1663.0], [68.7, 1665.0], [68.8, 1668.0], [68.9, 1670.0], [69.0, 1673.0], [69.1, 1677.0], [69.2, 1680.0], [69.3, 1681.0], [69.4, 1682.0], [69.5, 1683.0], [69.6, 1684.0], [69.7, 1686.0], [69.8, 1688.0], [69.9, 1690.0], [70.0, 1690.0], [70.1, 1692.0], [70.2, 1693.0], [70.3, 1694.0], [70.4, 1698.0], [70.5, 1699.0], [70.6, 1700.0], [70.7, 1705.0], [70.8, 1707.0], [70.9, 1709.0], [71.0, 1712.0], [71.1, 1714.0], [71.2, 1720.0], [71.3, 1723.0], [71.4, 1724.0], [71.5, 1727.0], [71.6, 1727.0], [71.7, 1730.0], [71.8, 1732.0], [71.9, 1734.0], [72.0, 1738.0], [72.1, 1741.0], [72.2, 1744.0], [72.3, 1748.0], [72.4, 1752.0], [72.5, 1754.0], [72.6, 1759.0], [72.7, 1762.0], [72.8, 1763.0], [72.9, 1765.0], [73.0, 1773.0], [73.1, 1776.0], [73.2, 1781.0], [73.3, 1785.0], [73.4, 1788.0], [73.5, 1792.0], [73.6, 1794.0], [73.7, 1796.0], [73.8, 1801.0], [73.9, 1811.0], [74.0, 1817.0], [74.1, 1822.0], [74.2, 1828.0], [74.3, 1831.0], [74.4, 1838.0], [74.5, 1840.0], [74.6, 1850.0], [74.7, 1861.0], [74.8, 1865.0], [74.9, 1869.0], [75.0, 1875.0], [75.1, 1879.0], [75.2, 1881.0], [75.3, 1883.0], [75.4, 1885.0], [75.5, 1886.0], [75.6, 1890.0], [75.7, 1891.0], [75.8, 1893.0], [75.9, 1894.0], [76.0, 1896.0], [76.1, 1900.0], [76.2, 1908.0], [76.3, 1911.0], [76.4, 1918.0], [76.5, 1928.0], [76.6, 1951.0], [76.7, 1969.0], [76.8, 1971.0], [76.9, 1978.0], [77.0, 1981.0], [77.1, 1992.0], [77.2, 2011.0], [77.3, 2032.0], [77.4, 2042.0], [77.5, 2054.0], [77.6, 2072.0], [77.7, 2083.0], [77.8, 2090.0], [77.9, 2095.0], [78.0, 2102.0], [78.1, 2122.0], [78.2, 2134.0], [78.3, 2145.0], [78.4, 2155.0], [78.5, 2174.0], [78.6, 2201.0], [78.7, 2205.0], [78.8, 2211.0], [78.9, 2218.0], [79.0, 2227.0], [79.1, 2244.0], [79.2, 2256.0], [79.3, 2262.0], [79.4, 2270.0], [79.5, 2277.0], [79.6, 2287.0], [79.7, 2296.0], [79.8, 2307.0], [79.9, 2314.0], [80.0, 2315.0], [80.1, 2318.0], [80.2, 2326.0], [80.3, 2332.0], [80.4, 2336.0], [80.5, 2341.0], [80.6, 2347.0], [80.7, 2357.0], [80.8, 2363.0], [80.9, 2364.0], [81.0, 2368.0], [81.1, 2369.0], [81.2, 2373.0], [81.3, 2377.0], [81.4, 2395.0], [81.5, 2408.0], [81.6, 2446.0], [81.7, 2501.0], [81.8, 2573.0], [81.9, 2639.0], [82.0, 2650.0], [82.1, 2665.0], [82.2, 2692.0], [82.3, 2726.0], [82.4, 2780.0], [82.5, 2787.0], [82.6, 2834.0], [82.7, 2919.0], [82.8, 2951.0], [82.9, 3172.0], [83.0, 3185.0], [83.1, 3186.0], [83.2, 3189.0], [83.3, 3193.0], [83.4, 3197.0], [83.5, 3199.0], [83.6, 3203.0], [83.7, 3204.0], [83.8, 3206.0], [83.9, 3210.0], [84.0, 3309.0], [84.1, 3335.0], [84.2, 3377.0], [84.3, 3752.0], [84.4, 3807.0], [84.5, 3821.0], [84.6, 3823.0], [84.7, 3823.0], [84.8, 3826.0], [84.9, 3845.0], [85.0, 3860.0], [85.1, 3879.0], [85.2, 3892.0], [85.3, 3908.0], [85.4, 3918.0], [85.5, 3921.0], [85.6, 3921.0], [85.7, 3923.0], [85.8, 3928.0], [85.9, 3935.0], [86.0, 3958.0], [86.1, 3983.0], [86.2, 3996.0], [86.3, 4025.0], [86.4, 4037.0], [86.5, 4058.0], [86.6, 4077.0], [86.7, 4084.0], [86.8, 4099.0], [86.9, 4108.0], [87.0, 4114.0], [87.1, 4117.0], [87.2, 4118.0], [87.3, 4128.0], [87.4, 4137.0], [87.5, 4183.0], [87.6, 4198.0], [87.7, 4209.0], [87.8, 4219.0], [87.9, 4224.0], [88.0, 4229.0], [88.1, 4235.0], [88.2, 4241.0], [88.3, 4247.0], [88.4, 4257.0], [88.5, 4263.0], [88.6, 4269.0], [88.7, 4279.0], [88.8, 4283.0], [88.9, 4294.0], [89.0, 4316.0], [89.1, 4325.0], [89.2, 4335.0], [89.3, 4344.0], [89.4, 4351.0], [89.5, 4356.0], [89.6, 4364.0], [89.7, 4369.0], [89.8, 4373.0], [89.9, 4378.0], [90.0, 4380.0], [90.1, 4388.0], [90.2, 4390.0], [90.3, 4397.0], [90.4, 4408.0], [90.5, 4431.0], [90.6, 4462.0], [90.7, 4519.0], [90.8, 4546.0], [90.9, 4551.0], [91.0, 4562.0], [91.1, 4592.0], [91.2, 4612.0], [91.3, 4620.0], [91.4, 4639.0], [91.5, 4651.0], [91.6, 4661.0], [91.7, 4675.0], [91.8, 4690.0], [91.9, 4728.0], [92.0, 4791.0], [92.1, 4865.0], [92.2, 4896.0], [92.3, 4917.0], [92.4, 4961.0], [92.5, 4990.0], [92.6, 5021.0], [92.7, 5037.0], [92.8, 5099.0], [92.9, 5182.0], [93.0, 5217.0], [93.1, 5316.0], [93.2, 5361.0], [93.3, 5434.0], [93.4, 5616.0], [93.5, 6077.0], [93.6, 6305.0], [93.7, 6314.0], [93.8, 6322.0], [93.9, 6327.0], [94.0, 6334.0], [94.1, 6338.0], [94.2, 6340.0], [94.3, 6341.0], [94.4, 6344.0], [94.5, 6346.0], [94.6, 6351.0], [94.7, 6360.0], [94.8, 6403.0], [94.9, 6763.0], [95.0, 6821.0], [95.1, 6966.0], [95.2, 7007.0], [95.3, 7075.0], [95.4, 7161.0], [95.5, 7307.0], [95.6, 7360.0], [95.7, 7373.0], [95.8, 7493.0], [95.9, 7569.0], [96.0, 7577.0], [96.1, 7767.0], [96.2, 8074.0], [96.3, 8212.0], [96.4, 8331.0], [96.5, 8403.0], [96.6, 8575.0], [96.7, 9178.0], [96.8, 9184.0], [96.9, 9191.0], [97.0, 9201.0], [97.1, 9210.0], [97.2, 9303.0], [97.3, 9339.0], [97.4, 9351.0], [97.5, 9810.0], [97.6, 9868.0], [97.7, 9876.0], [97.8, 10002.0], [97.9, 10222.0], [98.0, 11521.0], [98.1, 13289.0], [98.2, 120517.0], [98.3, 120558.0], [98.4, 120568.0], [98.5, 120585.0], [98.6, 120597.0], [98.7, 120610.0], [98.8, 121047.0], [98.9, 121105.0], [99.0, 121131.0], [99.1, 121166.0], [99.2, 121197.0], [99.3, 121387.0], [99.4, 121508.0], [99.5, 121535.0], [99.6, 121649.0], [99.7, 122090.0], [99.8, 124079.0], [99.9, 124324.0]], "isOverall": false, "label": "01 - Home page", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 613.0, "series": [{"data": [[0.0, 45.0], [121500.0, 7.0], [121100.0, 15.0], [121900.0, 1.0], [120700.0, 1.0], [124300.0, 1.0], [130300.0, 1.0], [100.0, 26.0], [200.0, 15.0], [300.0, 8.0], [400.0, 56.0], [121000.0, 6.0], [121400.0, 3.0], [122200.0, 1.0], [120600.0, 5.0], [500.0, 238.0], [127000.0, 1.0], [600.0, 203.0], [700.0, 153.0], [800.0, 334.0], [900.0, 166.0], [1000.0, 292.0], [1100.0, 244.0], [1200.0, 519.0], [1300.0, 613.0], [1400.0, 107.0], [1500.0, 55.0], [1600.0, 194.0], [1700.0, 151.0], [1800.0, 105.0], [1900.0, 52.0], [2000.0, 37.0], [2100.0, 29.0], [2200.0, 52.0], [2300.0, 82.0], [2400.0, 9.0], [2500.0, 6.0], [2600.0, 20.0], [2700.0, 15.0], [2800.0, 5.0], [2900.0, 6.0], [3000.0, 3.0], [3100.0, 30.0], [3200.0, 22.0], [3300.0, 10.0], [3400.0, 3.0], [3700.0, 3.0], [3600.0, 1.0], [3800.0, 43.0], [3900.0, 43.0], [4000.0, 29.0], [4100.0, 36.0], [4200.0, 62.0], [4300.0, 64.0], [4400.0, 16.0], [4500.0, 23.0], [4600.0, 31.0], [4700.0, 10.0], [4800.0, 8.0], [4900.0, 14.0], [5000.0, 13.0], [5100.0, 8.0], [5300.0, 10.0], [5200.0, 4.0], [5400.0, 3.0], [5500.0, 1.0], [5600.0, 3.0], [5800.0, 2.0], [6000.0, 1.0], [6300.0, 60.0], [6400.0, 3.0], [6500.0, 1.0], [6900.0, 5.0], [6700.0, 5.0], [6800.0, 2.0], [7000.0, 10.0], [7100.0, 2.0], [7200.0, 4.0], [7300.0, 11.0], [7400.0, 5.0], [7500.0, 12.0], [120500.0, 21.0], [122100.0, 1.0], [121300.0, 1.0], [7700.0, 2.0], [124500.0, 1.0], [123300.0, 1.0], [124100.0, 3.0], [124900.0, 1.0], [8000.0, 3.0], [8100.0, 3.0], [8600.0, 1.0], [8300.0, 6.0], [8400.0, 5.0], [8500.0, 1.0], [8200.0, 4.0], [9200.0, 8.0], [9100.0, 15.0], [9300.0, 17.0], [9800.0, 13.0], [10000.0, 4.0], [10200.0, 1.0], [9900.0, 1.0], [11000.0, 2.0], [10900.0, 1.0], [10800.0, 1.0], [11500.0, 1.0], [12200.0, 1.0], [12300.0, 2.0], [13200.0, 1.0], [13300.0, 1.0], [21100.0, 1.0], [120400.0, 2.0], [121200.0, 3.0], [121600.0, 5.0], [122000.0, 3.0], [124000.0, 2.0]], "isOverall": false, "label": "https//www.bol.com/nl/nl/", "isController": false}, {"data": [[0.0, 45.0], [121500.0, 7.0], [121100.0, 15.0], [121900.0, 1.0], [120700.0, 1.0], [124300.0, 1.0], [130300.0, 1.0], [100.0, 26.0], [200.0, 15.0], [300.0, 8.0], [400.0, 56.0], [121000.0, 6.0], [121400.0, 3.0], [122200.0, 1.0], [120600.0, 5.0], [500.0, 238.0], [127000.0, 1.0], [600.0, 203.0], [700.0, 153.0], [800.0, 334.0], [900.0, 166.0], [1000.0, 292.0], [1100.0, 244.0], [1200.0, 519.0], [1300.0, 613.0], [1400.0, 107.0], [1500.0, 55.0], [1600.0, 194.0], [1700.0, 151.0], [1800.0, 105.0], [1900.0, 52.0], [2000.0, 37.0], [2100.0, 29.0], [2200.0, 52.0], [2300.0, 82.0], [2400.0, 9.0], [2500.0, 6.0], [2600.0, 20.0], [2700.0, 15.0], [2800.0, 5.0], [2900.0, 6.0], [3000.0, 3.0], [3100.0, 30.0], [3200.0, 22.0], [3300.0, 10.0], [3400.0, 3.0], [3700.0, 3.0], [3600.0, 1.0], [3800.0, 43.0], [3900.0, 43.0], [4000.0, 29.0], [4100.0, 36.0], [4200.0, 62.0], [4300.0, 64.0], [4400.0, 16.0], [4500.0, 23.0], [4600.0, 31.0], [4700.0, 10.0], [4800.0, 8.0], [4900.0, 14.0], [5000.0, 13.0], [5100.0, 8.0], [5300.0, 10.0], [5200.0, 4.0], [5400.0, 3.0], [5500.0, 1.0], [5600.0, 3.0], [5800.0, 2.0], [6000.0, 1.0], [6300.0, 60.0], [6400.0, 3.0], [6500.0, 1.0], [6900.0, 5.0], [6700.0, 5.0], [6800.0, 2.0], [7000.0, 10.0], [7100.0, 2.0], [7200.0, 4.0], [7300.0, 11.0], [7400.0, 5.0], [7500.0, 12.0], [120500.0, 21.0], [122100.0, 1.0], [121300.0, 1.0], [7700.0, 2.0], [124500.0, 1.0], [123300.0, 1.0], [124100.0, 3.0], [124900.0, 1.0], [8000.0, 3.0], [8100.0, 3.0], [8600.0, 1.0], [8300.0, 6.0], [8400.0, 5.0], [8500.0, 1.0], [8200.0, 4.0], [9200.0, 8.0], [9100.0, 15.0], [9300.0, 17.0], [9800.0, 13.0], [10000.0, 4.0], [10200.0, 1.0], [9900.0, 1.0], [11000.0, 2.0], [10900.0, 1.0], [10800.0, 1.0], [11500.0, 1.0], [12200.0, 1.0], [12300.0, 2.0], [13200.0, 1.0], [13300.0, 1.0], [21100.0, 1.0], [120400.0, 2.0], [121200.0, 3.0], [121600.0, 5.0], [122000.0, 3.0], [124000.0, 2.0]], "isOverall": false, "label": "01 - Home page", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 130300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1 500ms"], [2, "Requests having \nresponse time > 1 500ms"], [3, "Requests in error"]], "maxY": 4633.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1 500ms", "isController": false}, {"data": [[2.0, 1.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1 500ms", "isController": false}, {"data": [[3.0, 4633.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 35.942857142857136, "minX": 1.65279372E12, "maxY": 718.7188511326864, "series": [{"data": [[1.65279384E12, 78.93749999999999], [1.6527939E12, 35.942857142857136], [1.65279372E12, 383.3198458574182], [1.65279378E12, 718.7188511326864]], "isOverall": false, "label": "Bol-prod-20220517-1522", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6527939E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 44.0, "minX": 2.0, "maxY": 130398.0, "series": [{"data": [[2.0, 121218.0], [3.0, 120624.0], [4.0, 120610.0], [5.0, 124155.0], [6.0, 130398.0], [7.0, 121197.0], [8.0, 121622.0], [9.0, 121498.0], [10.0, 121178.0], [12.0, 121859.5], [14.0, 124579.0], [16.0, 120595.0], [18.0, 121109.5], [19.0, 121146.0], [20.0, 124152.0], [21.0, 121129.0], [22.0, 121105.0], [24.0, 120647.5], [25.0, 122084.0], [27.0, 120580.5], [29.0, 122635.0], [30.0, 120585.0], [33.0, 121605.0], [32.0, 121593.5], [37.0, 121387.0], [36.0, 120582.33333333333], [39.0, 124506.0], [38.0, 120525.0], [41.0, 121128.0], [40.0, 124324.0], [44.0, 120942.0], [47.0, 121175.0], [46.0, 120845.5], [49.0, 121182.0], [48.0, 120609.0], [51.0, 120590.5], [53.0, 121684.0], [52.0, 121198.0], [55.0, 120597.5], [61.0, 121041.0], [60.0, 122286.8], [63.0, 121187.0], [66.0, 121530.0], [65.0, 121411.5], [70.0, 127000.0], [69.0, 121088.0], [68.0, 121648.5], [74.0, 121523.5], [72.0, 120534.5], [79.0, 121477.0], [76.0, 121532.0], [83.0, 121067.0], [82.0, 121079.0], [81.0, 120431.5], [87.0, 21153.0], [86.0, 121047.0], [85.0, 120517.0], [84.0, 120535.0], [91.0, 9924.0], [90.0, 9381.0], [89.0, 9339.0], [88.0, 13319.0], [95.0, 9304.0], [94.0, 9309.0], [93.0, 9191.0], [92.0, 9192.0], [97.0, 9892.0], [96.0, 9303.0], [100.0, 1418.2173913043478], [101.0, 1414.857142857143], [103.0, 9178.0], [102.0, 10838.0], [107.0, 599.6], [106.0, 2965.333333333333], [104.0, 890.3333333333334], [105.0, 6339.0], [110.0, 1453.3], [109.0, 1113.9333333333334], [111.0, 889.8333333333333], [108.0, 2693.8333333333335], [114.0, 1600.8333333333333], [115.0, 3191.5], [113.0, 3506.875], [119.0, 4615.0], [117.0, 2140.3333333333335], [116.0, 3089.6666666666665], [118.0, 4609.0], [121.0, 46.0], [122.0, 48.0], [123.0, 9410.333333333334], [120.0, 9872.0], [126.0, 46.0], [125.0, 5138.0], [124.0, 3097.3333333333335], [127.0, 6346.0], [128.0, 44.0], [132.0, 6190.0], [135.0, 77.66666666666667], [133.0, 6195.0], [129.0, 6249.0], [134.0, 9868.0], [131.0, 9341.0], [130.0, 9302.0], [141.0, 3330.0], [136.0, 3311.0], [142.0, 53.0], [139.0, 3194.5], [138.0, 4623.5], [140.0, 4970.5], [143.0, 6544.0], [137.0, 6329.0], [150.0, 4233.666666666667], [148.0, 3206.5], [149.0, 71.0], [147.0, 3200.0], [144.0, 3189.0], [145.0, 4971.5], [146.0, 4968.0], [156.0, 3269.0], [153.0, 3453.0], [159.0, 127.5], [152.0, 4564.666666666667], [157.0, 6302.0], [155.0, 6966.0], [154.0, 4362.0], [160.0, 2568.2], [163.0, 127.0], [162.0, 3232.5], [167.0, 3232.5], [165.0, 3225.1666666666665], [166.0, 6344.0], [161.0, 11027.0], [172.0, 3454.0], [171.0, 3459.5], [170.0, 3233.0], [169.0, 5010.5], [175.0, 6305.0], [174.0, 6306.0], [173.0, 6785.0], [168.0, 10906.0], [183.0, 268.0], [182.0, 3931.25], [178.0, 4122.0], [177.0, 6301.0], [176.0, 6302.0], [187.0, 3344.0], [186.0, 3938.0], [184.0, 4431.0], [195.0, 399.0], [197.0, 419.0], [198.0, 434.6666666666667], [199.0, 1074.6153846153845], [196.0, 4116.0], [193.0, 4117.0], [192.0, 4885.0], [200.0, 907.5], [201.0, 481.8333333333333], [202.0, 474.85714285714283], [204.0, 485.27272727272725], [205.0, 495.3636363636364], [206.0, 508.7142857142857], [207.0, 515.5], [203.0, 7494.0], [208.0, 1695.84], [209.0, 673.1851851851853], [210.0, 999.5555555555555], [211.0, 1036.857142857143], [212.0, 1674.0], [213.0, 1213.25], [215.0, 569.5714285714286], [214.0, 3205.0], [216.0, 2632.3333333333335], [217.0, 1865.5], [219.0, 2212.2], [221.0, 1884.5], [223.0, 551.5], [220.0, 4191.0], [225.0, 1130.5], [227.0, 1870.0], [228.0, 4433.5], [231.0, 3089.0], [229.0, 5058.0], [226.0, 4352.0], [224.0, 6279.666666666667], [232.0, 1907.3333333333333], [233.0, 1853.3333333333333], [234.0, 2462.25], [237.0, 565.9999999999999], [238.0, 1695.2857142857142], [239.0, 1657.0], [236.0, 3919.0], [235.0, 3916.0], [240.0, 1265.0], [242.0, 1493.4], [243.0, 585.375], [244.0, 1284.1538461538462], [245.0, 913.75], [246.0, 745.7499999999999], [247.0, 1247.8], [241.0, 4570.0], [248.0, 754.0588235294117], [249.0, 848.8], [250.0, 957.5], [251.0, 905.181818181818], [252.0, 601.0], [253.0, 2370.75], [255.0, 2362.5], [254.0, 4118.0], [259.0, 1266.4], [257.0, 853.7272727272727], [256.0, 1122.4], [258.0, 2256.0], [261.0, 2331.3333333333335], [262.0, 3925.0], [263.0, 1710.0], [264.0, 631.75], [265.0, 5541.0], [271.0, 2230.8571428571427], [268.0, 626.0], [269.0, 613.0], [266.0, 613.2], [267.0, 2364.5], [275.0, 640.0], [273.0, 634.0], [272.0, 640.0], [279.0, 4089.0], [274.0, 642.6666666666666], [276.0, 3121.142857142857], [277.0, 1580.75], [280.0, 655.8571428571428], [286.0, 1344.6], [287.0, 1353.6], [284.0, 669.5], [285.0, 3915.0], [281.0, 1897.857142857143], [282.0, 1003.2], [283.0, 1753.6666666666667], [289.0, 1324.4], [288.0, 917.8], [290.0, 858.9285714285716], [291.0, 995.8], [292.0, 1625.4285714285713], [293.0, 1052.2857142857142], [294.0, 892.5384615384617], [295.0, 686.9130434782609], [296.0, 1082.5263157894738], [302.0, 1344.8333333333335], [303.0, 4378.0], [300.0, 2806.8], [301.0, 1174.125], [297.0, 1647.2857142857142], [298.0, 701.6249999999999], [299.0, 682.0], [305.0, 1018.8947368421053], [304.0, 714.5], [306.0, 711.0], [307.0, 2117.75], [308.0, 1519.75], [309.0, 1953.0], [311.0, 735.0], [310.0, 3203.0], [313.0, 737.1666666666667], [319.0, 746.5], [316.0, 1353.5], [317.0, 3570.0], [314.0, 725.5], [315.0, 2387.375], [321.0, 4335.8], [320.0, 750.0], [322.0, 2093.0], [333.0, 792.0], [335.0, 1283.4666666666667], [334.0, 4992.666666666667], [324.0, 3557.25], [325.0, 3671.75], [326.0, 4980.0], [327.0, 3588.0], [328.0, 1678.0], [329.0, 800.5], [330.0, 2629.333333333333], [331.0, 1649.6666666666665], [337.0, 815.2], [336.0, 808.1666666666667], [338.0, 810.0], [339.0, 814.8], [340.0, 808.1666666666667], [342.0, 827.0], [343.0, 4737.866666666667], [344.0, 1180.142857142857], [350.0, 1840.3636363636365], [351.0, 1759.8333333333335], [348.0, 1203.3333333333335], [349.0, 834.3333333333334], [345.0, 1108.090909090909], [347.0, 849.5], [353.0, 867.1249999999999], [352.0, 863.2857142857142], [354.0, 875.6250000000001], [355.0, 867.6666666666666], [356.0, 3066.153846153846], [357.0, 872.6666666666666], [358.0, 1966.1], [360.0, 1606.7272727272727], [367.0, 8963.666666666666], [365.0, 867.0], [364.0, 9269.5], [366.0, 881.0], [361.0, 860.25], [362.0, 852.7142857142857], [363.0, 856.8571428571429], [369.0, 3704.3333333333335], [368.0, 2131.8], [370.0, 1469.0], [371.0, 3976.0], [372.0, 1338.5714285714284], [373.0, 889.5], [374.0, 6501.333333333333], [375.0, 2294.666666666667], [376.0, 2046.5], [382.0, 916.2], [383.0, 905.0], [380.0, 2561.8], [381.0, 925.6666666666666], [377.0, 2384.5], [379.0, 916.6666666666666], [385.0, 927.0], [384.0, 2735.8], [387.0, 934.2], [386.0, 4749.5], [396.0, 972.0], [397.0, 1931.1666666666667], [399.0, 6330.0], [398.0, 3845.0], [389.0, 3657.0], [388.0, 6311.0], [390.0, 1462.1666666666665], [391.0, 956.5], [392.0, 2109.75], [393.0, 950.75], [394.0, 2181.6], [395.0, 4043.0], [401.0, 982.6], [400.0, 974.4375000000001], [402.0, 983.25], [403.0, 3663.875], [404.0, 1656.375], [405.0, 6338.0], [406.0, 3666.5], [407.0, 1007.3], [409.0, 1163.3333333333333], [412.0, 1015.2], [413.0, 1304.0], [415.0, 1185.2307692307693], [408.0, 6502.5], [411.0, 1212.818181818182], [410.0, 1461.0], [417.0, 1035.8999999999999], [416.0, 1083.7142857142858], [418.0, 1049.5], [419.0, 2185.6666666666665], [420.0, 1061.6], [421.0, 1064.0666666666668], [422.0, 1628.153846153846], [423.0, 1210.666666666667], [424.0, 1640.2], [431.0, 1074.3333333333333], [428.0, 1254.9999999999998], [429.0, 3466.0], [430.0, 1201.0], [425.0, 1050.7], [426.0, 1331.2], [427.0, 1059.75], [433.0, 1089.125], [432.0, 1653.4], [434.0, 1273.0], [435.0, 1838.3000000000002], [436.0, 1103.111111111111], [437.0, 1883.5714285714284], [438.0, 1100.5], [439.0, 2908.0], [440.0, 1097.0], [444.0, 1118.0], [445.0, 1126.0], [446.0, 2664.4285714285716], [447.0, 3807.0], [442.0, 2126.875], [449.0, 1526.5], [448.0, 1733.0], [450.0, 2667.142857142857], [451.0, 1137.25], [452.0, 1145.5], [453.0, 2021.3333333333335], [454.0, 2932.625], [455.0, 2051.0], [456.0, 2524.6666666666665], [461.0, 1824.0], [460.0, 3979.0], [462.0, 2419.285714285714], [457.0, 1719.0], [458.0, 2485.714285714286], [459.0, 3769.1666666666665], [465.0, 2585.5], [464.0, 2143.6666666666665], [466.0, 1158.5], [467.0, 1166.5], [468.0, 1183.5], [469.0, 3434.2], [470.0, 1165.4285714285713], [471.0, 5045.0], [472.0, 1638.8333333333333], [479.0, 2718.875], [477.0, 3738.222222222222], [478.0, 1545.0], [473.0, 1177.0], [475.0, 1189.3333333333333], [481.0, 1693.0], [480.0, 1298.0], [482.0, 1539.5555555555552], [483.0, 1364.7142857142858], [484.0, 1244.7777777777778], [485.0, 1531.0], [487.0, 1212.6666666666667], [486.0, 1916.0], [489.0, 1219.5714285714287], [492.0, 1234.2], [494.0, 1453.0714285714284], [495.0, 1241.0], [488.0, 3133.5], [490.0, 1220.0], [497.0, 1334.2857142857142], [496.0, 2234.818181818182], [498.0, 1327.8], [499.0, 1222.5714285714287], [500.0, 1231.0], [501.0, 1477.142857142857], [502.0, 1231.3636363636363], [503.0, 1478.75], [504.0, 1237.0], [510.0, 1256.4444444444446], [511.0, 1231.0], [508.0, 1872.5], [509.0, 1526.0], [505.0, 1268.0], [506.0, 1747.047619047619], [507.0, 1694.625], [513.0, 1256.375], [523.0, 1239.0], [512.0, 1218.6666666666667], [526.0, 1248.0], [524.0, 1381.3333333333333], [525.0, 2659.666666666667], [514.0, 1309.5714285714287], [515.0, 2093.0], [517.0, 1253.0], [519.0, 1269.9999999999998], [536.0, 1250.2857142857142], [537.0, 1197.75], [538.0, 1085.0], [539.0, 1310.8750000000002], [541.0, 1171.2], [542.0, 1093.0], [543.0, 1068.6666666666667], [529.0, 4340.0], [531.0, 1296.7142857142856], [532.0, 1404.6666666666667], [533.0, 1445.6666666666667], [535.0, 1713.0], [534.0, 1047.0], [520.0, 1259.142857142857], [521.0, 1390.75], [522.0, 2115.285714285714], [549.0, 1005.5], [545.0, 1011.0], [544.0, 1583.25], [558.0, 1308.5], [559.0, 1787.75], [555.0, 2184.6], [556.0, 971.0], [546.0, 1004.0], [547.0, 1461.6666666666665], [548.0, 1374.6923076923074], [550.0, 2422.2], [568.0, 1112.5555555555557], [569.0, 1815.6666666666667], [570.0, 1463.357142857143], [571.0, 1793.0], [572.0, 1619.0], [573.0, 1356.0769230769229], [574.0, 1320.0909090909092], [575.0, 1382.6666666666667], [560.0, 1600.0], [561.0, 1310.529411764706], [562.0, 1808.4545454545455], [563.0, 1292.2857142857144], [564.0, 1667.6666666666667], [565.0, 837.0], [566.0, 1483.8], [567.0, 2105.714285714286], [552.0, 1026.75], [554.0, 1386.3333333333335], [582.0, 1203.3333333333335], [577.0, 1686.0833333333335], [576.0, 1163.5], [589.0, 2685.666666666667], [578.0, 1196.1666666666667], [579.0, 1133.5], [581.0, 822.0], [592.0, 1246.6], [595.0, 8168.0], [594.0, 1158.5], [605.0, 995.3333333333334], [606.0, 3860.25], [607.0, 1678.5], [602.0, 1780.3333333333333], [604.0, 2126.0], [600.0, 1506.2], [601.0, 3674.714285714286], [596.0, 1043.9999999999998], [597.0, 907.0], [599.0, 937.25], [585.0, 1451.0], [586.0, 1137.6666666666667], [587.0, 835.1428571428571], [588.0, 1375.3333333333333], [614.0, 1529.75], [610.0, 1589.8333333333333], [609.0, 1302.3333333333333], [623.0, 1585.9999999999998], [621.0, 2763.3333333333335], [619.0, 1935.25], [618.0, 1167.0], [622.0, 1410.7500000000002], [611.0, 1757.1363636363635], [612.0, 1280.0], [613.0, 1432.3000000000002], [615.0, 1392.0], [632.0, 8403.0], [633.0, 1210.5], [634.0, 1394.4], [635.0, 1549.5], [636.0, 1787.9333333333334], [637.0, 1229.0], [639.0, 1213.5], [624.0, 2459.0], [625.0, 1240.6923076923078], [626.0, 1740.7500000000002], [627.0, 1757.8999999999999], [629.0, 3513.0], [630.0, 1189.0], [631.0, 1943.0], [616.0, 1622.0], [617.0, 1635.0], [643.0, 1363.6666666666667], [652.0, 1644.4285714285716], [642.0, 2386.0], [655.0, 1424.857142857143], [640.0, 1210.0], [644.0, 1252.2857142857144], [647.0, 1711.4545454545457], [656.0, 1568.5], [668.0, 1324.0], [669.0, 1406.0], [670.0, 7488.0], [666.0, 1269.0], [667.0, 1336.0], [664.0, 2258.4999999999995], [665.0, 1328.142857142857], [657.0, 1446.3333333333333], [659.0, 1620.75], [660.0, 1551.25], [661.0, 1413.1000000000001], [662.0, 1610.4999999999998], [663.0, 3115.0], [648.0, 1797.1428571428573], [649.0, 2132.1428571428573], [650.0, 1371.3999999999999], [653.0, 1723.25], [654.0, 1293.5], [679.0, 2324.0000000000005], [673.0, 1347.5], [672.0, 1339.0], [685.0, 1777.0], [686.0, 6341.666666666667], [687.0, 1314.3333333333333], [675.0, 2140.25], [674.0, 1411.3333333333333], [676.0, 1804.1249999999998], [677.0, 2806.0], [688.0, 1484.0], [702.0, 1354.2727272727273], [703.0, 1407.7], [698.0, 1324.0], [700.0, 1249.5], [701.0, 1333.4999999999998], [696.0, 1733.5], [697.0, 1853.75], [689.0, 2521.3333333333335], [690.0, 1347.0], [691.0, 1358.5], [692.0, 3320.4], [693.0, 1505.0], [694.0, 2545.0], [680.0, 2031.0], [681.0, 1925.4545454545453], [682.0, 3455.333333333333], [683.0, 3211.5], [684.0, 1730.5], [711.0, 1420.2857142857144], [705.0, 2443.1428571428573], [704.0, 1387.5], [718.0, 2396.5], [719.0, 2795.25], [716.0, 3257.6], [717.0, 2382.5], [706.0, 1325.0], [707.0, 1261.5], [709.0, 4237.0], [710.0, 4240.666666666667], [720.0, 2625.3333333333335], [734.0, 2148.6], [735.0, 1317.5], [732.0, 1551.5], [733.0, 3097.5], [730.0, 1949.714285714286], [731.0, 3059.75], [721.0, 2590.25], [722.0, 4242.0], [723.0, 3611.6666666666665], [724.0, 1499.0], [725.0, 1316.5], [726.0, 1338.6], [712.0, 1461.0], [713.0, 1513.8181818181815], [714.0, 2099.4999999999995], [715.0, 1981.888888888889], [742.0, 2531.6666666666665], [748.0, 2128.5], [740.0, 2187.0], [739.0, 1345.5], [738.0, 4206.0], [737.0, 5627.333333333333], [750.0, 2097.0], [751.0, 2733.4], [741.0, 1210.5], [743.0, 2399.6666666666665], [760.0, 1795.3333333333333], [761.0, 1550.3333333333335], [762.0, 2354.0], [763.0, 1819.4375], [764.0, 2664.5], [765.0, 2248.6666666666665], [766.0, 1357.0], [767.0, 1137.0], [752.0, 993.5], [753.0, 1724.0], [755.0, 1819.6666666666667], [756.0, 918.3333333333334], [757.0, 1734.8333333333333], [758.0, 1839.2272727272727], [759.0, 1816.0], [745.0, 2787.5], [744.0, 3280.5], [746.0, 1714.0], [747.0, 2175.0], [774.0, 1665.2], [770.0, 2156.833333333333], [769.0, 1121.0], [782.0, 1834.8333333333335], [783.0, 1050.5], [780.0, 4511.0], [781.0, 2633.6666666666665], [778.0, 1406.3333333333335], [779.0, 1812.3333333333333], [771.0, 1510.6666666666667], [772.0, 2874.75], [773.0, 1721.8333333333335], [775.0, 1985.7142857142858], [794.0, 2257.0], [795.0, 1598.0], [796.0, 1241.7142857142858], [797.0, 1915.6666666666667], [798.0, 1002.4444444444445], [799.0, 1408.0], [784.0, 1964.3333333333333], [785.0, 1087.8000000000002], [786.0, 1400.0], [787.0, 1333.3333333333335], [788.0, 1609.8], [789.0, 1616.0], [791.0, 1884.0], [790.0, 2090.0], [776.0, 1412.2857142857142], [777.0, 1736.5], [805.0, 5077.0], [812.0, 2626.538461538461], [801.0, 1651.5555555555557], [800.0, 1842.7142857142858], [813.0, 1974.5], [815.0, 1557.857142857143], [802.0, 3172.5], [807.0, 4072.0], [806.0, 1324.0], [824.0, 1582.75], [825.0, 1574.5000000000002], [826.0, 1887.2857142857144], [827.0, 2062.3333333333335], [828.0, 2678.5], [829.0, 2134.25], [830.0, 2045.6], [831.0, 4271.0], [817.0, 1747.2857142857144], [818.0, 1731.6666666666667], [819.0, 1843.0], [820.0, 2023.2], [821.0, 1079.0], [822.0, 2301.727272727273], [823.0, 1078.0], [808.0, 1355.0], [809.0, 1886.3], [810.0, 1631.0], [811.0, 1323.0], [837.0, 1663.6666666666667], [833.0, 1718.4], [832.0, 2097.6666666666665], [834.0, 1378.7857142857142], [835.0, 1959.7272727272727], [836.0, 1730.2], [848.0, 1962.4], [863.0, 1325.0], [860.0, 1300.5714285714284], [861.0, 1691.5714285714287], [858.0, 1274.6666666666667], [859.0, 2149.375], [856.0, 1292.8], [838.0, 1825.0], [857.0, 1265.0], [849.0, 1485.5555555555557], [850.0, 1371.5833333333333], [851.0, 1965.714285714286], [852.0, 2103.8], [853.0, 2133.0909090909095], [854.0, 1296.25], [855.0, 1579.5], [840.0, 1220.3333333333333], [842.0, 3590.4], [846.0, 1252.3333333333333], [845.0, 4551.0], [844.0, 4720.0], [847.0, 1279.142857142857], [867.0, 1543.75], [864.0, 2631.6666666666665], [878.0, 3004.5], [879.0, 2947.3333333333335], [876.0, 2922.0], [877.0, 2449.8888888888887], [874.0, 1345.857142857143], [875.0, 1439.6666666666667], [865.0, 1763.75], [866.0, 1370.6], [868.0, 1404.75], [869.0, 1551.25], [870.0, 2468.5], [871.0, 1480.5], [881.0, 1802.0], [894.0, 2016.2], [895.0, 1440.818181818182], [892.0, 1311.0], [893.0, 3245.4], [890.0, 1321.0], [891.0, 3351.0999999999995], [888.0, 1871.6666666666667], [889.0, 1567.6666666666667], [882.0, 1294.0], [883.0, 2311.6], [884.0, 1498.8333333333335], [885.0, 1619.5], [886.0, 1505.5], [887.0, 1661.235294117647], [872.0, 1804.0], [873.0, 1308.8], [902.0, 5627.4], [897.0, 3501.2], [896.0, 1763.5454545454547], [910.0, 1789.0], [911.0, 5098.0], [908.0, 1410.0], [909.0, 1871.5714285714287], [906.0, 1893.4285714285716], [907.0, 1296.0], [899.0, 1468.8333333333333], [900.0, 1320.0], [901.0, 1784.25], [903.0, 2212.857142857143], [920.0, 1536.75], [921.0, 1318.5], [922.0, 1368.9], [924.0, 1928.1666666666667], [923.0, 1738.3333333333333], [925.0, 1569.0], [926.0, 1342.0], [927.0, 1365.5], [912.0, 1308.75], [913.0, 1870.0], [914.0, 1983.3333333333333], [915.0, 1561.5], [916.0, 1765.0], [917.0, 2139.25], [918.0, 2640.5714285714284], [919.0, 2439.538461538461], [904.0, 1836.4], [905.0, 1691.875], [934.0, 1716.0], [930.0, 4829.5], [929.0, 7502.0], [943.0, 1415.0], [941.0, 3440.6249999999995], [942.0, 2345.4999999999995], [939.0, 1996.6], [938.0, 2804.3333333333335], [940.0, 1422.2857142857142], [931.0, 2515.6666666666665], [932.0, 1504.75], [933.0, 3160.333333333334], [935.0, 2443.666666666667], [952.0, 1401.1666666666667], [953.0, 3310.8], [954.0, 1364.1666666666665], [955.0, 4370.333333333333], [957.0, 2945.5833333333335], [958.0, 3198.0], [959.0, 1415.0], [944.0, 3224.75], [945.0, 2949.0], [946.0, 3836.5], [947.0, 5014.2], [948.0, 2629.8], [949.0, 1345.2857142857142], [950.0, 2168.4444444444443], [951.0, 2025.5], [936.0, 2128.5], [937.0, 1800.25], [966.0, 4877.0], [961.0, 3340.3333333333335], [960.0, 2094.875], [975.0, 1388.0], [973.0, 3446.5], [974.0, 1775.0], [970.0, 1812.0], [972.0, 1912.857142857143], [962.0, 2630.5], [963.0, 2118.8], [964.0, 1874.1428571428573], [967.0, 1637.6], [984.0, 1499.0], [985.0, 3062.75], [986.0, 1682.1], [988.0, 1399.0], [989.0, 2196.153846153846], [990.0, 2343.7272727272725], [991.0, 1910.0], [976.0, 2219.5714285714284], [977.0, 2324.75], [978.0, 1965.75], [979.0, 1657.75], [980.0, 3345.0], [981.0, 1691.7777777777778], [982.0, 3190.0], [968.0, 1384.6666666666667], [969.0, 1391.0], [995.0, 4366.833333333334], [992.0, 4031.0], [993.0, 1576.3333333333333], [994.0, 1471.75], [996.0, 1399.0], [997.0, 3901.1666666666665], [998.0, 3108.0], [999.0, 1771.25], [1000.0, 2129.8]], "isOverall": false, "label": "https//www.bol.com/nl/nl/", "isController": false}, {"data": [[555.9417350021582, 4082.3269313767833]], "isOverall": false, "label": "https//www.bol.com/nl/nl/-Aggregated", "isController": false}, {"data": [[2.0, 121218.0], [3.0, 120624.0], [4.0, 120610.0], [5.0, 124155.0], [6.0, 130398.0], [7.0, 121197.0], [8.0, 121622.0], [9.0, 121498.0], [10.0, 121178.0], [12.0, 121859.5], [14.0, 124579.0], [16.0, 120595.0], [18.0, 121109.5], [19.0, 121146.0], [20.0, 124152.0], [21.0, 121129.0], [22.0, 121105.0], [24.0, 120647.5], [25.0, 122084.0], [27.0, 120580.5], [29.0, 122635.0], [30.0, 120585.0], [33.0, 121605.0], [32.0, 121593.5], [37.0, 121387.0], [36.0, 120582.33333333333], [39.0, 124506.0], [38.0, 120525.0], [41.0, 121128.0], [40.0, 124324.0], [44.0, 120942.0], [47.0, 121175.0], [46.0, 120845.5], [49.0, 121182.0], [48.0, 120609.0], [51.0, 120590.5], [53.0, 121684.0], [52.0, 121198.0], [55.0, 120597.5], [61.0, 121041.0], [60.0, 122286.8], [63.0, 121187.0], [66.0, 121530.0], [65.0, 121411.5], [70.0, 127000.0], [69.0, 121088.0], [68.0, 121648.5], [74.0, 121523.5], [72.0, 120534.5], [79.0, 121477.0], [76.0, 121532.0], [83.0, 121067.0], [82.0, 121079.0], [81.0, 120431.5], [87.0, 21153.0], [86.0, 121047.0], [85.0, 120517.0], [84.0, 120535.0], [91.0, 9924.0], [90.0, 9381.0], [89.0, 9339.0], [88.0, 13319.0], [95.0, 9304.0], [94.0, 9309.0], [93.0, 9191.0], [92.0, 9192.0], [97.0, 9892.0], [96.0, 9303.0], [100.0, 1418.217391304348], [101.0, 1414.8571428571427], [103.0, 9178.0], [102.0, 10838.0], [104.0, 890.3333333333334], [107.0, 599.6], [106.0, 2965.333333333333], [105.0, 6339.0], [109.0, 1113.9333333333334], [108.0, 2693.8333333333335], [110.0, 1453.3], [111.0, 889.8333333333334], [113.0, 3506.875], [114.0, 1600.8333333333333], [115.0, 3191.5], [116.0, 3089.6666666666665], [117.0, 2140.3333333333335], [118.0, 4609.0], [119.0, 4615.0], [122.0, 48.0], [121.0, 46.0], [123.0, 9410.333333333334], [120.0, 9872.0], [124.0, 3097.3333333333335], [126.0, 46.0], [125.0, 5138.0], [127.0, 6346.0], [129.0, 6249.0], [133.0, 6195.0], [135.0, 77.66666666666667], [132.0, 6190.0], [128.0, 44.0], [134.0, 9868.0], [131.0, 9341.0], [130.0, 9302.0], [136.0, 3311.0], [140.0, 4970.5], [138.0, 4623.5], [139.0, 3194.5], [142.0, 53.0], [141.0, 3330.0], [143.0, 6544.0], [137.0, 6329.0], [146.0, 4968.0], [145.0, 4971.5], [144.0, 3189.0], [147.0, 3200.0], [149.0, 71.0], [148.0, 3206.5], [150.0, 4233.666666666667], [152.0, 4564.666666666667], [159.0, 127.5], [153.0, 3453.0], [156.0, 3269.0], [157.0, 6302.0], [155.0, 6966.0], [154.0, 4362.0], [160.0, 2568.2], [162.0, 3232.5], [163.0, 127.0], [167.0, 3232.5], [165.0, 3225.1666666666665], [166.0, 6344.0], [161.0, 11027.0], [172.0, 3454.0], [171.0, 3459.5], [169.0, 5010.5], [170.0, 3233.0], [175.0, 6305.0], [174.0, 6306.0], [173.0, 6785.0], [168.0, 10906.0], [183.0, 268.0], [182.0, 3931.25], [178.0, 4122.0], [177.0, 6301.0], [176.0, 6302.0], [187.0, 3344.0], [186.0, 3938.0], [184.0, 4431.0], [195.0, 399.0], [197.0, 419.0], [198.0, 434.6666666666667], [199.0, 1074.6153846153845], [196.0, 4116.0], [193.0, 4117.0], [192.0, 4885.0], [200.0, 907.5], [201.0, 481.8333333333333], [202.0, 474.8571428571429], [204.0, 485.2727272727273], [205.0, 495.36363636363643], [206.0, 508.7142857142857], [207.0, 515.5], [203.0, 7494.0], [208.0, 1695.84], [209.0, 673.185185185185], [210.0, 999.5555555555555], [211.0, 1036.857142857143], [212.0, 1674.0], [213.0, 1213.25], [215.0, 569.5714285714286], [214.0, 3205.0], [216.0, 2632.3333333333335], [217.0, 1865.5], [219.0, 2212.2], [221.0, 1884.5], [223.0, 551.5], [220.0, 4191.0], [225.0, 1130.5], [227.0, 1870.0], [228.0, 4433.5], [231.0, 3089.0], [229.0, 5058.0], [226.0, 4352.0], [224.0, 6279.666666666667], [232.0, 1907.3333333333333], [233.0, 1853.3333333333333], [234.0, 2462.25], [237.0, 565.9999999999999], [238.0, 1695.2857142857142], [239.0, 1657.0], [236.0, 3919.0], [235.0, 3916.0], [240.0, 1265.0], [242.0, 1493.4], [243.0, 585.375], [244.0, 1284.1538461538462], [245.0, 913.75], [246.0, 745.75], [247.0, 1247.8], [241.0, 4570.0], [248.0, 754.0588235294117], [249.0, 848.8], [250.0, 957.4999999999999], [251.0, 905.181818181818], [252.0, 601.0], [253.0, 2370.75], [255.0, 2362.5], [254.0, 4118.0], [259.0, 1266.4], [257.0, 853.7272727272727], [256.0, 1122.4], [258.0, 2256.0], [261.0, 2331.3333333333335], [262.0, 3925.0], [263.0, 1710.0], [264.0, 631.75], [265.0, 5541.0], [271.0, 2230.8571428571427], [268.0, 626.0], [269.0, 613.0], [266.0, 613.2], [267.0, 2364.5], [275.0, 640.0], [273.0, 634.0], [272.0, 640.0], [279.0, 4089.0], [274.0, 642.6666666666666], [276.0, 3121.1428571428573], [277.0, 1580.75], [281.0, 1897.857142857143], [280.0, 655.8571428571429], [286.0, 1344.6], [287.0, 1353.6], [284.0, 669.5], [285.0, 3915.0], [282.0, 1003.2], [283.0, 1753.6666666666667], [289.0, 1324.4], [288.0, 917.8], [290.0, 858.9285714285713], [291.0, 995.8], [292.0, 1625.4285714285713], [293.0, 1052.2857142857142], [294.0, 892.5384615384615], [295.0, 686.913043478261], [296.0, 1082.5263157894738], [302.0, 1344.8333333333335], [303.0, 4378.0], [300.0, 2806.8], [301.0, 1174.125], [297.0, 1647.2857142857142], [298.0, 701.6249999999999], [299.0, 682.0], [305.0, 1018.8947368421053], [304.0, 714.5], [306.0, 711.0], [307.0, 2117.75], [308.0, 1519.75], [309.0, 1953.0], [311.0, 735.0], [310.0, 3203.0], [313.0, 737.1666666666667], [319.0, 746.5], [316.0, 1353.5], [317.0, 3570.0], [314.0, 725.5], [315.0, 2387.375], [321.0, 4335.8], [320.0, 750.0], [322.0, 2093.0], [333.0, 792.0], [335.0, 1283.4666666666667], [334.0, 4992.666666666667], [324.0, 3557.25], [325.0, 3671.75], [326.0, 4980.0], [327.0, 3588.0], [328.0, 1678.0], [329.0, 800.5], [330.0, 2629.333333333333], [331.0, 1649.6666666666665], [337.0, 815.2], [336.0, 808.1666666666666], [339.0, 814.8], [338.0, 810.0], [340.0, 808.1666666666667], [342.0, 827.0], [343.0, 4737.866666666667], [344.0, 1180.142857142857], [350.0, 1840.3636363636365], [351.0, 1759.8333333333335], [348.0, 1203.3333333333335], [349.0, 834.3333333333334], [345.0, 1108.090909090909], [347.0, 849.5], [353.0, 867.125], [352.0, 863.2857142857142], [354.0, 875.625], [355.0, 867.6666666666666], [356.0, 3066.153846153846], [357.0, 872.6666666666666], [358.0, 1966.1], [360.0, 1606.7272727272727], [367.0, 8963.666666666666], [365.0, 867.0], [364.0, 9269.5], [366.0, 881.0], [361.0, 860.25], [362.0, 852.7142857142857], [363.0, 856.8571428571429], [369.0, 3704.3333333333335], [368.0, 2131.8], [370.0, 1469.0], [371.0, 3976.0], [372.0, 1338.5714285714284], [373.0, 889.5], [374.0, 6501.333333333333], [375.0, 2294.666666666667], [376.0, 2046.5], [382.0, 916.2], [383.0, 905.0], [380.0, 2561.8], [381.0, 925.6666666666666], [377.0, 2384.5], [379.0, 916.6666666666666], [385.0, 927.0], [384.0, 2735.8], [387.0, 934.2], [386.0, 4749.5], [396.0, 972.0], [397.0, 1931.1666666666667], [399.0, 6330.0], [398.0, 3845.0], [389.0, 3657.0], [388.0, 6311.0], [390.0, 1462.1666666666665], [391.0, 956.5], [392.0, 2109.75], [393.0, 950.75], [394.0, 2181.6], [395.0, 4043.0], [401.0, 982.6], [400.0, 974.4375], [402.0, 983.25], [403.0, 3663.875], [404.0, 1656.375], [405.0, 6338.0], [406.0, 3666.5], [407.0, 1007.3], [409.0, 1163.3333333333333], [412.0, 1015.2], [413.0, 1304.0], [415.0, 1185.230769230769], [408.0, 6502.5], [411.0, 1212.818181818182], [410.0, 1461.0], [417.0, 1035.9000000000003], [416.0, 1083.7142857142858], [418.0, 1049.5], [419.0, 2185.666666666667], [420.0, 1061.6], [421.0, 1064.0666666666666], [422.0, 1628.1538461538462], [423.0, 1210.666666666667], [424.0, 1640.2], [431.0, 1074.3333333333333], [428.0, 1255.0], [429.0, 3466.0], [430.0, 1201.0], [425.0, 1050.7], [426.0, 1331.2], [427.0, 1059.75], [433.0, 1089.125], [432.0, 1653.4], [434.0, 1273.0], [435.0, 1838.3000000000002], [436.0, 1103.111111111111], [437.0, 1883.5714285714284], [438.0, 1100.5], [439.0, 2908.0], [440.0, 1097.0], [444.0, 1118.0], [445.0, 1126.0], [446.0, 2664.4285714285716], [447.0, 3807.0], [442.0, 2126.875], [449.0, 1526.5], [448.0, 1733.0], [450.0, 2667.142857142857], [451.0, 1137.25], [452.0, 1145.5], [453.0, 2021.3333333333335], [454.0, 2932.625], [455.0, 2051.0], [456.0, 2524.6666666666665], [461.0, 1824.0], [460.0, 3979.0], [462.0, 2419.285714285714], [457.0, 1719.0], [458.0, 2485.714285714286], [459.0, 3769.1666666666665], [465.0, 2585.5], [464.0, 2143.6666666666665], [466.0, 1158.5], [467.0, 1166.5], [468.0, 1183.5], [469.0, 3434.2], [470.0, 1165.4285714285713], [471.0, 5045.0], [472.0, 1638.8333333333333], [479.0, 2718.875], [477.0, 3738.222222222222], [478.0, 1545.0], [473.0, 1177.0], [475.0, 1189.3333333333333], [481.0, 1693.0], [480.0, 1298.0], [482.0, 1539.5555555555552], [483.0, 1364.7142857142856], [484.0, 1244.7777777777778], [485.0, 1531.0], [487.0, 1212.6666666666667], [486.0, 1916.0], [489.0, 1219.5714285714287], [492.0, 1234.2], [494.0, 1453.0714285714284], [495.0, 1241.0], [488.0, 3133.5], [490.0, 1220.0], [497.0, 1334.2857142857142], [496.0, 2234.818181818182], [498.0, 1327.8], [499.0, 1222.5714285714287], [500.0, 1231.0], [501.0, 1477.142857142857], [502.0, 1231.3636363636363], [503.0, 1478.75], [504.0, 1237.0000000000002], [510.0, 1256.4444444444443], [511.0, 1231.0], [508.0, 1872.5], [509.0, 1526.0], [505.0, 1268.0], [506.0, 1747.0476190476193], [507.0, 1694.625], [513.0, 1256.375], [523.0, 1239.0], [512.0, 1218.6666666666667], [526.0, 1248.0], [524.0, 1381.3333333333333], [525.0, 2659.666666666667], [514.0, 1309.5714285714287], [515.0, 2093.0], [517.0, 1253.0], [519.0, 1270.0], [536.0, 1250.2857142857142], [537.0, 1197.75], [538.0, 1085.0], [539.0, 1310.875], [541.0, 1171.2], [542.0, 1093.0], [543.0, 1068.6666666666667], [529.0, 4340.0], [531.0, 1296.7142857142858], [532.0, 1404.6666666666667], [533.0, 1445.6666666666667], [535.0, 1713.0], [534.0, 1047.0], [520.0, 1259.142857142857], [521.0, 1390.75], [522.0, 2115.285714285714], [549.0, 1005.5], [545.0, 1011.0], [544.0, 1583.25], [558.0, 1308.5], [559.0, 1787.75], [555.0, 2184.6], [556.0, 971.0], [546.0, 1004.0], [547.0, 1461.6666666666665], [548.0, 1374.6923076923074], [550.0, 2422.2], [568.0, 1112.5555555555557], [569.0, 1815.6666666666667], [570.0, 1463.357142857143], [571.0, 1793.0], [572.0, 1619.0], [573.0, 1356.076923076923], [574.0, 1320.090909090909], [575.0, 1382.6666666666667], [560.0, 1600.0], [561.0, 1310.5294117647059], [562.0, 1808.4545454545455], [563.0, 1292.2857142857142], [564.0, 1667.6666666666667], [565.0, 837.0], [566.0, 1483.8], [567.0, 2105.714285714286], [552.0, 1026.75], [554.0, 1386.3333333333335], [582.0, 1203.3333333333335], [577.0, 1686.0833333333335], [576.0, 1163.5], [589.0, 2685.6666666666665], [578.0, 1196.1666666666667], [579.0, 1133.5], [581.0, 822.0], [592.0, 1246.6], [595.0, 8168.0], [594.0, 1158.5], [605.0, 995.3333333333334], [606.0, 3860.25], [607.0, 1678.5], [602.0, 1780.3333333333333], [604.0, 2126.0], [600.0, 1506.2], [601.0, 3674.714285714286], [596.0, 1043.9999999999998], [597.0, 907.0], [599.0, 937.25], [585.0, 1451.0], [586.0, 1137.666666666667], [587.0, 835.1428571428571], [588.0, 1375.3333333333333], [614.0, 1529.75], [610.0, 1589.8333333333333], [609.0, 1302.3333333333333], [623.0, 1585.9999999999998], [621.0, 2763.3333333333335], [619.0, 1935.25], [618.0, 1167.0], [622.0, 1410.75], [611.0, 1757.1363636363635], [612.0, 1280.0], [613.0, 1432.3000000000002], [615.0, 1392.0], [632.0, 8403.0], [633.0, 1210.5], [634.0, 1394.4], [635.0, 1549.5], [636.0, 1787.9333333333334], [637.0, 1229.0], [639.0, 1213.5], [624.0, 2459.0], [625.0, 1240.6923076923078], [626.0, 1740.75], [627.0, 1757.8999999999999], [629.0, 3513.0], [630.0, 1189.0], [631.0, 1943.0], [616.0, 1622.0], [617.0, 1635.0], [643.0, 1363.6666666666667], [652.0, 1644.4285714285716], [642.0, 2386.0], [655.0, 1424.857142857143], [640.0, 1210.0], [644.0, 1252.2857142857144], [647.0, 1711.4545454545457], [656.0, 1568.5], [668.0, 1324.0], [669.0, 1406.0], [670.0, 7488.0], [666.0, 1269.0], [667.0, 1336.0], [664.0, 2258.4999999999995], [665.0, 1328.142857142857], [657.0, 1446.3333333333333], [659.0, 1620.75], [660.0, 1551.25], [661.0, 1413.1000000000004], [662.0, 1610.5], [663.0, 3115.0], [648.0, 1797.1428571428573], [649.0, 2132.1428571428573], [650.0, 1371.3999999999996], [653.0, 1723.25], [654.0, 1293.5], [679.0, 2324.0000000000005], [673.0, 1347.5], [672.0, 1339.0], [685.0, 1777.0], [686.0, 6341.666666666667], [687.0, 1314.3333333333333], [675.0, 2140.25], [674.0, 1411.3333333333333], [676.0, 1804.125], [677.0, 2806.0], [688.0, 1484.0], [702.0, 1354.2727272727273], [703.0, 1407.7], [698.0, 1324.0], [700.0, 1249.5], [701.0, 1333.4999999999998], [696.0, 1733.5], [697.0, 1853.75], [689.0, 2521.3333333333335], [690.0, 1347.0], [691.0, 1358.5], [692.0, 3320.4], [693.0, 1505.0], [694.0, 2545.0], [680.0, 2031.0], [681.0, 1925.4545454545453], [682.0, 3455.333333333333], [683.0, 3211.5], [684.0, 1730.5], [711.0, 1420.2857142857144], [705.0, 2443.142857142857], [704.0, 1387.5], [718.0, 2396.5], [719.0, 2795.25], [716.0, 3257.6], [717.0, 2382.5], [706.0, 1325.0], [707.0, 1261.5], [709.0, 4237.0], [710.0, 4240.666666666667], [720.0, 2625.3333333333335], [734.0, 2148.6], [735.0, 1317.5], [732.0, 1551.5000000000002], [733.0, 3097.5], [730.0, 1949.7142857142856], [731.0, 3059.75], [721.0, 2590.25], [722.0, 4242.0], [723.0, 3611.6666666666665], [724.0, 1499.0], [725.0, 1316.5], [726.0, 1338.6], [712.0, 1461.0], [713.0, 1513.8181818181818], [714.0, 2099.5], [715.0, 1981.888888888889], [742.0, 2531.6666666666665], [748.0, 2128.5], [740.0, 2187.0], [739.0, 1345.5], [738.0, 4206.0], [737.0, 5627.333333333333], [750.0, 2097.0], [751.0, 2733.4], [741.0, 1210.5], [743.0, 2399.6666666666665], [760.0, 1795.3333333333333], [761.0, 1550.3333333333335], [762.0, 2354.0], [763.0, 1819.4375], [764.0, 2664.5], [765.0, 2248.6666666666665], [766.0, 1357.0], [767.0, 1137.0], [752.0, 993.5], [753.0, 1724.0], [755.0, 1819.6666666666667], [756.0, 918.3333333333334], [757.0, 1734.8333333333333], [758.0, 1839.2272727272725], [759.0, 1816.0], [745.0, 2787.5], [744.0, 3280.5], [746.0, 1714.0], [747.0, 2175.0], [774.0, 1665.2], [770.0, 2156.833333333333], [769.0, 1121.0], [782.0, 1834.8333333333335], [783.0, 1050.5], [780.0, 4511.0], [781.0, 2633.6666666666665], [778.0, 1406.3333333333335], [779.0, 1812.3333333333333], [771.0, 1510.6666666666667], [772.0, 2874.75], [773.0, 1721.8333333333335], [775.0, 1985.7142857142853], [794.0, 2257.0], [795.0, 1598.0], [796.0, 1241.7142857142858], [797.0, 1915.6666666666667], [798.0, 1002.4444444444445], [799.0, 1408.0], [784.0, 1964.3333333333333], [785.0, 1087.8000000000002], [786.0, 1400.0], [787.0, 1333.3333333333335], [788.0, 1609.8], [789.0, 1616.0], [791.0, 1884.0], [790.0, 2090.0], [776.0, 1412.2857142857142], [777.0, 1736.5], [805.0, 5077.0], [812.0, 2626.5384615384614], [801.0, 1651.5555555555557], [800.0, 1842.7142857142858], [813.0, 1974.5], [815.0, 1557.857142857143], [802.0, 3172.5], [807.0, 4072.0], [806.0, 1324.0], [824.0, 1582.75], [825.0, 1574.5000000000002], [826.0, 1887.2857142857144], [827.0, 2062.3333333333335], [828.0, 2678.5], [829.0, 2134.25], [830.0, 2045.6], [831.0, 4271.0], [817.0, 1747.2857142857144], [818.0, 1731.6666666666667], [819.0, 1843.0], [820.0, 2023.2], [821.0, 1079.0], [822.0, 2301.727272727273], [823.0, 1078.0], [808.0, 1355.0], [809.0, 1886.3], [810.0, 1631.0], [811.0, 1323.0], [837.0, 1663.6666666666667], [833.0, 1718.4], [832.0, 2097.6666666666665], [834.0, 1378.7857142857142], [835.0, 1959.7272727272727], [836.0, 1730.2], [848.0, 1962.4], [863.0, 1325.0], [860.0, 1300.5714285714284], [861.0, 1691.5714285714287], [858.0, 1274.6666666666667], [859.0, 2149.375], [856.0, 1292.8], [838.0, 1825.0], [857.0, 1265.0], [849.0, 1485.5555555555557], [850.0, 1371.5833333333333], [851.0, 1965.714285714286], [852.0, 2103.8], [853.0, 2133.0909090909086], [854.0, 1296.25], [855.0, 1579.5], [840.0, 1220.3333333333333], [842.0, 3590.4], [846.0, 1252.3333333333333], [845.0, 4551.0], [844.0, 4720.0], [847.0, 1279.142857142857], [867.0, 1543.75], [864.0, 2631.6666666666665], [878.0, 3004.5], [879.0, 2947.3333333333335], [876.0, 2922.0], [877.0, 2449.8888888888887], [874.0, 1345.857142857143], [875.0, 1439.6666666666667], [865.0, 1763.75], [866.0, 1370.6], [868.0, 1404.75], [869.0, 1551.25], [870.0, 2468.5], [871.0, 1480.5], [881.0, 1802.0], [894.0, 2016.2], [895.0, 1440.818181818182], [892.0, 1311.0], [893.0, 3245.4], [890.0, 1321.0], [891.0, 3351.0999999999995], [888.0, 1871.6666666666667], [889.0, 1567.6666666666667], [882.0, 1294.0], [883.0, 2311.6], [884.0, 1498.8333333333335], [885.0, 1619.5], [886.0, 1505.5], [887.0, 1661.2352941176468], [872.0, 1804.0], [873.0, 1308.7999999999997], [902.0, 5627.4], [897.0, 3501.2], [896.0, 1763.5454545454547], [910.0, 1789.0], [911.0, 5098.0], [908.0, 1410.0], [909.0, 1871.5714285714287], [906.0, 1893.4285714285716], [907.0, 1296.0], [899.0, 1468.8333333333335], [900.0, 1320.0], [901.0, 1784.25], [903.0, 2212.8571428571427], [920.0, 1536.75], [921.0, 1318.5], [922.0, 1368.9], [924.0, 1928.1666666666667], [923.0, 1738.3333333333333], [925.0, 1569.0], [926.0, 1342.0], [927.0, 1365.5], [912.0, 1308.75], [913.0, 1870.0], [914.0, 1983.3333333333333], [915.0, 1561.5], [916.0, 1765.0], [917.0, 2139.25], [918.0, 2640.5714285714284], [919.0, 2439.5384615384614], [904.0, 1836.4], [905.0, 1691.875], [934.0, 1716.0], [930.0, 4829.5], [929.0, 7502.0], [943.0, 1415.0], [941.0, 3440.625], [942.0, 2345.5], [939.0, 1996.6], [938.0, 2804.3333333333335], [940.0, 1422.285714285714], [931.0, 2515.6666666666665], [932.0, 1504.75], [933.0, 3160.333333333334], [935.0, 2443.666666666667], [952.0, 1401.1666666666667], [953.0, 3310.8], [954.0, 1364.1666666666665], [955.0, 4370.333333333333], [957.0, 2945.5833333333335], [958.0, 3198.0], [959.0, 1415.0], [944.0, 3224.75], [945.0, 2949.0], [946.0, 3836.5], [947.0, 5014.2], [948.0, 2629.8], [949.0, 1345.2857142857142], [950.0, 2168.444444444445], [951.0, 2025.5], [936.0, 2128.5], [937.0, 1800.25], [966.0, 4877.0], [961.0, 3340.3333333333335], [960.0, 2094.875], [975.0, 1388.0], [973.0, 3446.5], [974.0, 1775.0], [970.0, 1812.0], [972.0, 1912.857142857143], [962.0, 2630.5], [963.0, 2118.8], [964.0, 1874.1428571428573], [967.0, 1637.6], [984.0, 1499.0], [985.0, 3062.7500000000005], [986.0, 1682.1], [988.0, 1399.0], [989.0, 2196.153846153846], [990.0, 2343.7272727272725], [991.0, 1910.0], [976.0, 2219.5714285714284], [977.0, 2324.75], [978.0, 1965.75], [979.0, 1657.75], [980.0, 3345.0], [981.0, 1691.7777777777778], [982.0, 3190.0], [968.0, 1384.6666666666667], [969.0, 1391.0], [995.0, 4366.833333333334], [992.0, 4031.0], [993.0, 1576.3333333333333], [994.0, 1471.75], [996.0, 1399.0], [997.0, 3901.1666666666665], [998.0, 3108.0], [999.0, 1771.25], [1000.0, 2129.7999999999997]], "isOverall": false, "label": "01 - Home page", "isController": true}, {"data": [[555.9417350021592, 4082.3269313767846]], "isOverall": false, "label": "01 - Home page-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.65279372E12, "maxY": 119453.06666666667, "series": [{"data": [[1.65279384E12, 796.8], [1.6527939E12, 3486.0], [1.65279372E12, 99129.0], [1.65279378E12, 119453.06666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65279384E12, 0.0], [1.6527939E12, 0.0], [1.65279372E12, 0.0], [1.65279378E12, 14.1]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6527939E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 989.8786127167624, "minX": 1.65279372E12, "maxY": 121709.54285714288, "series": [{"data": [[1.65279384E12, 121044.9375], [1.6527939E12, 121709.54285714288], [1.65279372E12, 989.8786127167637], [1.65279378E12, 2591.475728155338]], "isOverall": false, "label": "https//www.bol.com/nl/nl/", "isController": false}, {"data": [[1.65279384E12, 121044.9375], [1.6527939E12, 121709.54285714288], [1.65279372E12, 989.8786127167624], [1.65279378E12, 2591.4757281553375]], "isOverall": false, "label": "01 - Home page", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6527939E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65279372E12, "maxY": 8.535598705501618, "series": [{"data": [[1.65279384E12, 0.0], [1.6527939E12, 0.0], [1.65279372E12, 0.0], [1.65279378E12, 8.535598705501618]], "isOverall": false, "label": "https//www.bol.com/nl/nl/", "isController": false}, {"data": [[1.65279384E12, 0.0], [1.6527939E12, 0.0], [1.65279372E12, 0.0], [1.65279378E12, 8.535598705501618]], "isOverall": false, "label": "01 - Home page", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6527939E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 847.7037572254346, "minX": 1.65279372E12, "maxY": 2397.863673139157, "series": [{"data": [[1.65279384E12, 1044.0625], [1.6527939E12, 1708.0714285714284], [1.65279372E12, 847.7037572254352], [1.65279378E12, 2397.863673139157]], "isOverall": false, "label": "https//www.bol.com/nl/nl/", "isController": false}, {"data": [[1.65279384E12, 1044.0625], [1.6527939E12, 1708.0714285714284], [1.65279372E12, 847.7037572254346], [1.65279378E12, 2397.8636731391557]], "isOverall": false, "label": "01 - Home page", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6527939E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 21153.0, "minX": 1.65279378E12, "maxY": 21153.0, "series": [{"data": [[1.65279378E12, 21153.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65279378E12, 21153.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65279378E12, 21153.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65279378E12, 21153.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65279378E12, 21153.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65279378E12, 21153.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65279378E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 315.5, "minX": 1.0, "maxY": 121485.0, "series": [{"data": [[1.0, 21153.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[130.0, 4202.0], [9.0, 121485.0], [152.0, 315.5], [40.0, 9183.5], [176.0, 513.5], [11.0, 9303.0], [3.0, 66918.0], [12.0, 121218.0], [13.0, 121128.0], [239.0, 1160.0], [252.0, 1413.5], [258.0, 1336.0], [1.0, 9924.0], [4.0, 120753.0], [286.0, 1287.0], [294.0, 1246.5], [289.0, 1345.5], [18.0, 121187.0], [313.0, 610.0], [322.0, 813.5], [6.0, 64851.5], [116.0, 4103.0], [30.0, 6341.0], [508.0, 1584.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 508.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 21100.0, "series": [{"data": [[1.0, 21100.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[130.0, 0.0], [9.0, 0.0], [152.0, 0.0], [40.0, 0.0], [176.0, 0.0], [11.0, 0.0], [3.0, 0.0], [12.0, 0.0], [13.0, 0.0], [239.0, 0.0], [252.0, 0.0], [258.0, 0.0], [1.0, 0.0], [4.0, 0.0], [286.0, 0.0], [294.0, 0.0], [289.0, 0.0], [18.0, 0.0], [313.0, 0.0], [322.0, 0.0], [6.0, 0.0], [116.0, 0.0], [30.0, 0.0], [508.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 508.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 32.166666666666664, "minX": 1.65279372E12, "maxY": 45.06666666666667, "series": [{"data": [[1.65279372E12, 45.06666666666667], [1.65279378E12, 32.166666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65279378E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.65279372E12, "maxY": 41.18333333333333, "series": [{"data": [[1.65279378E12, 0.016666666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.65279384E12, 0.26666666666666666], [1.6527939E12, 1.1666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.65279372E12, 34.6], [1.65279378E12, 41.18333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6527939E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.65279372E12, "maxY": 41.18333333333333, "series": [{"data": [[1.65279384E12, 0.26666666666666666], [1.6527939E12, 1.1666666666666667], [1.65279372E12, 34.6], [1.65279378E12, 41.18333333333333]], "isOverall": false, "label": "https//www.bol.com/nl/nl/-failure", "isController": false}, {"data": [[1.65279378E12, 0.016666666666666666]], "isOverall": false, "label": "https//www.bol.com/nl/nl/-success", "isController": false}, {"data": [[1.65279378E12, 0.016666666666666666]], "isOverall": false, "label": "01 - Home page-success", "isController": true}, {"data": [[1.65279384E12, 0.26666666666666666], [1.6527939E12, 1.1666666666666667], [1.65279372E12, 34.6], [1.65279378E12, 41.18333333333333]], "isOverall": false, "label": "01 - Home page-failure", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6527939E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.65279372E12, "maxY": 82.36666666666666, "series": [{"data": [[1.65279378E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.65279384E12, 0.5333333333333333], [1.6527939E12, 2.3333333333333335], [1.65279372E12, 69.2], [1.65279378E12, 82.36666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6527939E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

